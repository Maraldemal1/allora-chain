package testutil

import (
	"encoding/csv"
	"fmt"
	"strings"

	alloraMath "github.com/allora-network/allora-chain/math"
	"github.com/allora-network/allora-chain/x/emissions/keeper"
	inferencesynthesis "github.com/allora-network/allora-chain/x/emissions/keeper/inference_synthesis"
	emissionstypes "github.com/allora-network/allora-chain/x/emissions/types"
	sdk "github.com/cosmos/cosmos-sdk/types"
)

func GetSimulatedValuesGetterForEpoch(
	epoch string,
	headers string,
) func(header string) alloraMath.Dec {
	r := csv.NewReader(strings.NewReader(headers + "\n" + epoch + "\n"))
	headersRead, err := r.Read()
	if err != nil {
		panic(err)
	}
	valuesRead, err := r.Read()
	if err != nil {
		panic(err)
	}
	simulatedValuesDec := make(map[string]alloraMath.Dec)
	if len(headersRead) != len(valuesRead) {
		panic("Header and values length mismatch")
	}
	for i := 0; i < len(headersRead); i++ {
		simulatedValuesDec[headersRead[i]] = alloraMath.MustNewDecFromString(valuesRead[i])
	}

	return func(header string) alloraMath.Dec {
		value, exists := simulatedValuesDec[header]
		if !exists {
			panic(fmt.Sprintf("Header '%s' not found in simulated values map", header))
		}
		return value
	}
}

func GetSimulatedValuesGetterForEpochs() map[int]func(header string) alloraMath.Dec {
	const simulatorHeaders = "target,inference_0,inference_1,inference_2,inference_3,inference_4,forecasted_loss_0_for_0,forecasted_loss_0_for_1,forecasted_loss_0_for_2,forecasted_loss_0_for_3,forecasted_loss_0_for_4,forecasted_loss_1_for_0,forecasted_loss_1_for_1,forecasted_loss_1_for_2,forecasted_loss_1_for_3,forecasted_loss_1_for_4,forecasted_loss_2_for_0,forecasted_loss_2_for_1,forecasted_loss_2_for_2,forecasted_loss_2_for_3,forecasted_loss_2_for_4,forecast_implied_inference_0,forecast_implied_inference_1,forecast_implied_inference_2,forecast_implied_inference_0_oneout_0,forecast_implied_inference_0_oneout_1,forecast_implied_inference_0_oneout_2,forecast_implied_inference_0_oneout_3,forecast_implied_inference_0_oneout_4,forecast_implied_inference_1_oneout_0,forecast_implied_inference_1_oneout_1,forecast_implied_inference_1_oneout_2,forecast_implied_inference_1_oneout_3,forecast_implied_inference_1_oneout_4,forecast_implied_inference_2_oneout_0,forecast_implied_inference_2_oneout_1,forecast_implied_inference_2_oneout_2,forecast_implied_inference_2_oneout_3,forecast_implied_inference_2_oneout_4,network_inference,network_inference_errorbar_0,network_inference_errorbar_1,network_inference_errorbar_2,network_inference_errorbar_3,network_inference_errorbar_4,network_naive_inference,network_inference_oneout_0,network_inference_oneout_1,network_inference_oneout_2,network_inference_oneout_3,network_inference_oneout_4,network_inference_oneout_5,network_inference_oneout_6,network_inference_oneout_7,network_naive_inference_onein_0,network_naive_inference_onein_1,network_naive_inference_onein_2,network_loss,reputer_stake_0,reputer_stake_1,reputer_stake_2,reputer_stake_3,reputer_stake_4,reputer_0_loss_inference_0,reputer_0_loss_inference_1,reputer_0_loss_inference_2,reputer_0_loss_inference_3,reputer_0_loss_inference_4,reputer_1_loss_inference_0,reputer_1_loss_inference_1,reputer_1_loss_inference_2,reputer_1_loss_inference_3,reputer_1_loss_inference_4,reputer_2_loss_inference_0,reputer_2_loss_inference_1,reputer_2_loss_inference_2,reputer_2_loss_inference_3,reputer_2_loss_inference_4,reputer_3_loss_inference_0,reputer_3_loss_inference_1,reputer_3_loss_inference_2,reputer_3_loss_inference_3,reputer_3_loss_inference_4,reputer_4_loss_inference_0,reputer_4_loss_inference_1,reputer_4_loss_inference_2,reputer_4_loss_inference_3,reputer_4_loss_inference_4,reputer_0_loss_forecast_implied_inference_0,reputer_0_loss_forecast_implied_inference_1,reputer_0_loss_forecast_implied_inference_2,reputer_1_loss_forecast_implied_inference_0,reputer_1_loss_forecast_implied_inference_1,reputer_1_loss_forecast_implied_inference_2,reputer_2_loss_forecast_implied_inference_0,reputer_2_loss_forecast_implied_inference_1,reputer_2_loss_forecast_implied_inference_2,reputer_3_loss_forecast_implied_inference_0,reputer_3_loss_forecast_implied_inference_1,reputer_3_loss_forecast_implied_inference_2,reputer_4_loss_forecast_implied_inference_0,reputer_4_loss_forecast_implied_inference_1,reputer_4_loss_forecast_implied_inference_2,reputer_0_loss_forecast_implied_inference_0_oneout_0,reputer_0_loss_forecast_implied_inference_0_oneout_1,reputer_0_loss_forecast_implied_inference_0_oneout_2,reputer_0_loss_forecast_implied_inference_0_oneout_3,reputer_0_loss_forecast_implied_inference_0_oneout_4,reputer_0_loss_forecast_implied_inference_1_oneout_0,reputer_0_loss_forecast_implied_inference_1_oneout_1,reputer_0_loss_forecast_implied_inference_1_oneout_2,reputer_0_loss_forecast_implied_inference_1_oneout_3,reputer_0_loss_forecast_implied_inference_1_oneout_4,reputer_0_loss_forecast_implied_inference_2_oneout_0,reputer_0_loss_forecast_implied_inference_2_oneout_1,reputer_0_loss_forecast_implied_inference_2_oneout_2,reputer_0_loss_forecast_implied_inference_2_oneout_3,reputer_0_loss_forecast_implied_inference_2_oneout_4,reputer_1_loss_forecast_implied_inference_0_oneout_0,reputer_1_loss_forecast_implied_inference_0_oneout_1,reputer_1_loss_forecast_implied_inference_0_oneout_2,reputer_1_loss_forecast_implied_inference_0_oneout_3,reputer_1_loss_forecast_implied_inference_0_oneout_4,reputer_1_loss_forecast_implied_inference_1_oneout_0,reputer_1_loss_forecast_implied_inference_1_oneout_1,reputer_1_loss_forecast_implied_inference_1_oneout_2,reputer_1_loss_forecast_implied_inference_1_oneout_3,reputer_1_loss_forecast_implied_inference_1_oneout_4,reputer_1_loss_forecast_implied_inference_2_oneout_0,reputer_1_loss_forecast_implied_inference_2_oneout_1,reputer_1_loss_forecast_implied_inference_2_oneout_2,reputer_1_loss_forecast_implied_inference_2_oneout_3,reputer_1_loss_forecast_implied_inference_2_oneout_4,reputer_2_loss_forecast_implied_inference_0_oneout_0,reputer_2_loss_forecast_implied_inference_0_oneout_1,reputer_2_loss_forecast_implied_inference_0_oneout_2,reputer_2_loss_forecast_implied_inference_0_oneout_3,reputer_2_loss_forecast_implied_inference_0_oneout_4,reputer_2_loss_forecast_implied_inference_1_oneout_0,reputer_2_loss_forecast_implied_inference_1_oneout_1,reputer_2_loss_forecast_implied_inference_1_oneout_2,reputer_2_loss_forecast_implied_inference_1_oneout_3,reputer_2_loss_forecast_implied_inference_1_oneout_4,reputer_2_loss_forecast_implied_inference_2_oneout_0,reputer_2_loss_forecast_implied_inference_2_oneout_1,reputer_2_loss_forecast_implied_inference_2_oneout_2,reputer_2_loss_forecast_implied_inference_2_oneout_3,reputer_2_loss_forecast_implied_inference_2_oneout_4,reputer_3_loss_forecast_implied_inference_0_oneout_0,reputer_3_loss_forecast_implied_inference_0_oneout_1,reputer_3_loss_forecast_implied_inference_0_oneout_2,reputer_3_loss_forecast_implied_inference_0_oneout_3,reputer_3_loss_forecast_implied_inference_0_oneout_4,reputer_3_loss_forecast_implied_inference_1_oneout_0,reputer_3_loss_forecast_implied_inference_1_oneout_1,reputer_3_loss_forecast_implied_inference_1_oneout_2,reputer_3_loss_forecast_implied_inference_1_oneout_3,reputer_3_loss_forecast_implied_inference_1_oneout_4,reputer_3_loss_forecast_implied_inference_2_oneout_0,reputer_3_loss_forecast_implied_inference_2_oneout_1,reputer_3_loss_forecast_implied_inference_2_oneout_2,reputer_3_loss_forecast_implied_inference_2_oneout_3,reputer_3_loss_forecast_implied_inference_2_oneout_4,reputer_4_loss_forecast_implied_inference_0_oneout_0,reputer_4_loss_forecast_implied_inference_0_oneout_1,reputer_4_loss_forecast_implied_inference_0_oneout_2,reputer_4_loss_forecast_implied_inference_0_oneout_3,reputer_4_loss_forecast_implied_inference_0_oneout_4,reputer_4_loss_forecast_implied_inference_1_oneout_0,reputer_4_loss_forecast_implied_inference_1_oneout_1,reputer_4_loss_forecast_implied_inference_1_oneout_2,reputer_4_loss_forecast_implied_inference_1_oneout_3,reputer_4_loss_forecast_implied_inference_1_oneout_4,reputer_4_loss_forecast_implied_inference_2_oneout_0,reputer_4_loss_forecast_implied_inference_2_oneout_1,reputer_4_loss_forecast_implied_inference_2_oneout_2,reputer_4_loss_forecast_implied_inference_2_oneout_3,reputer_4_loss_forecast_implied_inference_2_oneout_4,reputer_0_loss_network_inference,reputer_1_loss_network_inference,reputer_2_loss_network_inference,reputer_3_loss_network_inference,reputer_4_loss_network_inference,reputer_0_loss_naive_network_inference,reputer_1_loss_naive_network_inference,reputer_2_loss_naive_network_inference,reputer_3_loss_naive_network_inference,reputer_4_loss_naive_network_inference,reputer_0_loss_network_inference_oneout_0,reputer_0_loss_network_inference_oneout_1,reputer_0_loss_network_inference_oneout_2,reputer_0_loss_network_inference_oneout_3,reputer_0_loss_network_inference_oneout_4,reputer_0_loss_network_inference_oneout_5,reputer_0_loss_network_inference_oneout_6,reputer_0_loss_network_inference_oneout_7,reputer_1_loss_network_inference_oneout_0,reputer_1_loss_network_inference_oneout_1,reputer_1_loss_network_inference_oneout_2,reputer_1_loss_network_inference_oneout_3,reputer_1_loss_network_inference_oneout_4,reputer_1_loss_network_inference_oneout_5,reputer_1_loss_network_inference_oneout_6,reputer_1_loss_network_inference_oneout_7,reputer_2_loss_network_inference_oneout_0,reputer_2_loss_network_inference_oneout_1,reputer_2_loss_network_inference_oneout_2,reputer_2_loss_network_inference_oneout_3,reputer_2_loss_network_inference_oneout_4,reputer_2_loss_network_inference_oneout_5,reputer_2_loss_network_inference_oneout_6,reputer_2_loss_network_inference_oneout_7,reputer_3_loss_network_inference_oneout_0,reputer_3_loss_network_inference_oneout_1,reputer_3_loss_network_inference_oneout_2,reputer_3_loss_network_inference_oneout_3,reputer_3_loss_network_inference_oneout_4,reputer_3_loss_network_inference_oneout_5,reputer_3_loss_network_inference_oneout_6,reputer_3_loss_network_inference_oneout_7,reputer_4_loss_network_inference_oneout_0,reputer_4_loss_network_inference_oneout_1,reputer_4_loss_network_inference_oneout_2,reputer_4_loss_network_inference_oneout_3,reputer_4_loss_network_inference_oneout_4,reputer_4_loss_network_inference_oneout_5,reputer_4_loss_network_inference_oneout_6,reputer_4_loss_network_inference_oneout_7,reputer_0_loss_naive_network_inference_onein_0,reputer_0_loss_naive_network_inference_onein_1,reputer_0_loss_naive_network_inference_onein_2,reputer_1_loss_naive_network_inference_onein_0,reputer_1_loss_naive_network_inference_onein_1,reputer_1_loss_naive_network_inference_onein_2,reputer_2_loss_naive_network_inference_onein_0,reputer_2_loss_naive_network_inference_onein_1,reputer_2_loss_naive_network_inference_onein_2,reputer_3_loss_naive_network_inference_onein_0,reputer_3_loss_naive_network_inference_onein_1,reputer_3_loss_naive_network_inference_onein_2,reputer_4_loss_naive_network_inference_onein_0,reputer_4_loss_naive_network_inference_onein_1,reputer_4_loss_naive_network_inference_onein_2,inference_loss_0,inference_loss_1,inference_loss_2,inference_loss_3,inference_loss_4,forecast_implied_inference_loss_0,forecast_implied_inference_loss_1,forecast_implied_inference_loss_2,forecast_implied_inference_loss_0_oneout_0,forecast_implied_inference_loss_0_oneout_1,forecast_implied_inference_loss_0_oneout_2,forecast_implied_inference_loss_0_oneout_3,forecast_implied_inference_loss_0_oneout_4,forecast_implied_inference_loss_1_oneout_0,forecast_implied_inference_loss_1_oneout_1,forecast_implied_inference_loss_1_oneout_2,forecast_implied_inference_loss_1_oneout_3,forecast_implied_inference_loss_1_oneout_4,forecast_implied_inference_loss_2_oneout_0,forecast_implied_inference_loss_2_oneout_1,forecast_implied_inference_loss_2_oneout_2,forecast_implied_inference_loss_2_oneout_3,forecast_implied_inference_loss_2_oneout_4,network_naive_loss,network_loss_oneout_0,network_loss_oneout_1,network_loss_oneout_2,network_loss_oneout_3,network_loss_oneout_4,network_loss_oneout_5,network_loss_oneout_6,network_loss_oneout_7,network_naive_loss_onein_0,network_naive_loss_onein_1,network_naive_loss_onein_2,forecasted_regret_0_inferer_0,forecasted_regret_0_inferer_1,forecasted_regret_0_inferer_2,forecasted_regret_0_inferer_3,forecasted_regret_0_inferer_4,forecasted_regret_1_inferer_0,forecasted_regret_1_inferer_1,forecasted_regret_1_inferer_2,forecasted_regret_1_inferer_3,forecasted_regret_1_inferer_4,forecasted_regret_2_inferer_0,forecasted_regret_2_inferer_1,forecasted_regret_2_inferer_2,forecasted_regret_2_inferer_3,forecasted_regret_2_inferer_4,inference_regret_worker_0,inference_regret_worker_1,inference_regret_worker_2,inference_regret_worker_3,inference_regret_worker_4,inference_regret_worker_5,inference_regret_worker_6,inference_regret_worker_7,naive_inference_regret_worker_0,naive_inference_regret_worker_1,naive_inference_regret_worker_2,naive_inference_regret_worker_3,naive_inference_regret_worker_4,inference_regret_worker_0_oneout_0,inference_regret_worker_1_oneout_0,inference_regret_worker_2_oneout_0,inference_regret_worker_3_oneout_0,inference_regret_worker_4_oneout_0,inference_regret_worker_5_oneout_0,inference_regret_worker_6_oneout_0,inference_regret_worker_7_oneout_0,inference_regret_worker_0_oneout_1,inference_regret_worker_1_oneout_1,inference_regret_worker_2_oneout_1,inference_regret_worker_3_oneout_1,inference_regret_worker_4_oneout_1,inference_regret_worker_5_oneout_1,inference_regret_worker_6_oneout_1,inference_regret_worker_7_oneout_1,inference_regret_worker_0_oneout_2,inference_regret_worker_1_oneout_2,inference_regret_worker_2_oneout_2,inference_regret_worker_3_oneout_2,inference_regret_worker_4_oneout_2,inference_regret_worker_5_oneout_2,inference_regret_worker_6_oneout_2,inference_regret_worker_7_oneout_2,inference_regret_worker_0_oneout_3,inference_regret_worker_1_oneout_3,inference_regret_worker_2_oneout_3,inference_regret_worker_3_oneout_3,inference_regret_worker_4_oneout_3,inference_regret_worker_5_oneout_3,inference_regret_worker_6_oneout_3,inference_regret_worker_7_oneout_3,inference_regret_worker_0_oneout_4,inference_regret_worker_1_oneout_4,inference_regret_worker_2_oneout_4,inference_regret_worker_3_oneout_4,inference_regret_worker_4_oneout_4,inference_regret_worker_5_oneout_4,inference_regret_worker_6_oneout_4,inference_regret_worker_7_oneout_4,inference_regret_worker_0_oneout_5,inference_regret_worker_1_oneout_5,inference_regret_worker_2_oneout_5,inference_regret_worker_3_oneout_5,inference_regret_worker_4_oneout_5,inference_regret_worker_5_oneout_5,inference_regret_worker_6_oneout_5,inference_regret_worker_7_oneout_5,inference_regret_worker_0_oneout_6,inference_regret_worker_1_oneout_6,inference_regret_worker_2_oneout_6,inference_regret_worker_3_oneout_6,inference_regret_worker_4_oneout_6,inference_regret_worker_5_oneout_6,inference_regret_worker_6_oneout_6,inference_regret_worker_7_oneout_6,inference_regret_worker_0_oneout_7,inference_regret_worker_1_oneout_7,inference_regret_worker_2_oneout_7,inference_regret_worker_3_oneout_7,inference_regret_worker_4_oneout_7,inference_regret_worker_5_oneout_7,inference_regret_worker_6_oneout_7,inference_regret_worker_7_oneout_7,inference_regret_worker_0_onein_0,inference_regret_worker_1_onein_0,inference_regret_worker_2_onein_0,inference_regret_worker_3_onein_0,inference_regret_worker_4_onein_0,inference_regret_worker_5_onein_0,inference_regret_worker_0_onein_1,inference_regret_worker_1_onein_1,inference_regret_worker_2_onein_1,inference_regret_worker_3_onein_1,inference_regret_worker_4_onein_1,inference_regret_worker_5_onein_1,inference_regret_worker_0_onein_2,inference_regret_worker_1_onein_2,inference_regret_worker_2_onein_2,inference_regret_worker_3_onein_2,inference_regret_worker_4_onein_2,inference_regret_worker_5_onein_2,inferer_score_0,inferer_score_1,inferer_score_2,inferer_score_3,inferer_score_4,forecaster_score_0,forecaster_score_1,forecaster_score_2,inferer_reward_fraction_0,inferer_reward_fraction_1,inferer_reward_fraction_2,inferer_reward_fraction_3,inferer_reward_fraction_4,forecaster_reward_fraction_0,forecaster_reward_fraction_1,forecaster_reward_fraction_2,reputer_listening_coefficient_0,reputer_listening_coefficient_1,reputer_listening_coefficient_2,reputer_listening_coefficient_3,reputer_listening_coefficient_4,reputer_adjusted_stake_0,reputer_adjusted_stake_1,reputer_adjusted_stake_2,reputer_adjusted_stake_3,reputer_adjusted_stake_4,reputer_score_0,reputer_score_1,reputer_score_2,reputer_score_3,reputer_score_4,reputer_reward_fraction_0,reputer_reward_fraction_1,reputer_reward_fraction_2,reputer_reward_fraction_3,reputer_reward_fraction_4,inferer_reward_fraction_smooth_0,inferer_reward_fraction_smooth_1,inferer_reward_fraction_smooth_2,inferer_reward_fraction_smooth_3,inferer_reward_fraction_smooth_4,forecaster_reward_fraction_smooth_0,forecaster_reward_fraction_smooth_1,forecaster_reward_fraction_smooth_2,reputer_reward_fraction_smooth_0,reputer_reward_fraction_smooth_1,reputer_reward_fraction_smooth_2,reputer_reward_fraction_smooth_3,reputer_reward_fraction_smooth_4,inferers_entropy,forecasters_entropy,reputers_entropy,forecaster_task_score,forecaster_score_ratio,forecasters_utility,inferers_reward_fraction,forecasters_reward_fraction,reputers_reward_fraction,topic_rewards,inferer_reward_0,inferer_reward_1,inferer_reward_2,inferer_reward_3,inferer_reward_4,forecaster_reward_0,forecaster_reward_1,forecaster_reward_2,reputer_reward_0,reputer_reward_1,reputer_reward_2,reputer_reward_3,reputer_reward_4"
	simulatorEpochs := map[int]string{
		300: "0.03985254043403228,-0.023436611594409483,0.009781863350371005,0.02223793659211506,0.11552983586563229,0.032472720698523826,-2.341421686954683,-2.9432576400770207,-3.884181450545189,-1.9647795852794823,-4.111767408188739,-2.677026067794835,-2.944431590946878,-3.0650682375687572,-2.08706693542846,-4.140211608991293,-2.24866014324237,-1.8901641108547267,-4.125883222164734,-0.9729640557942307,-4.0722307692978905,0.02826282647586327,0.03170062431405967,0.026503516959533444,0.028351695174178293,0.02847501443733499,0.031565822393038,0.02852210555310457,0.02162383744842801,0.03174699263963974,0.03168609959754517,0.03150859611985521,0.03204949852916337,0.016472212744760836,0.027130615816963893,0.026433488590683445,0.03132421163175588,0.02674001950782827,0.02139759986129016,0.02855145779995668,0.023534274797223684,0.026898328268289043,0.028428530378435717,0.03112032841037331,0.032271453217482184,0.019039063086017143,0.029467747169893973,0.028978931643313773,0.03137674604752506,0.02868328027459238,0.020034343174970836,0.02943317064603761,0.02793669187389386,0.028840497953442033,0.028186525501405945,0.03156067312422539,0.026399137576023798,-3.6761664370574496,428054.17903067626,509004.42683683336,327066.11820671463,302421.5633935661,397978.4707791195,-1.285027790259861,-2.3830546751342823,-3.256262594972895,-0.901603218936355,-1.3779496468904517,-1.2731065545153895,-2.4271412552962555,-3.1602027232529477,-0.9710646287668246,-1.5942818258649414,-1.1332372457971156,-2.5227959336961208,-3.207635245298263,-1.0296738594694543,-1.4804203639607978,-1.2889403331644413,-2.6500477861343903,-3.3762923520567085,-1.0920460310220907,-1.5598562784076264,-1.3573311686171754,-2.533322631682507,-3.371331335558988,-0.7816189326383448,-1.596214834724491,-3.3456957376470737,-3.3449156322191236,-4.514320722461064,-3.5686933063962862,-3.571629048924509,-4.5542262693827205,-3.609494059827971,-3.3928602307888673,-4.644839920284647,-3.363543860257219,-3.680790486122139,-4.578571990268474,-3.5781183246072223,-3.4242559886507187,-4.518979247970155,-3.173542341818723,-3.1948025771857695,-2.3634012162512716,-3.263071279716223,-3.2940305193758075,-3.44201508535421,-3.25698571793207,-2.37154937337304,-3.304534124501911,-3.457406214473724,-4.116136912090553,-4.346159187174886,-2.0296997319017214,-5.561618998727663,-4.690114165844632,-3.357104810196551,-3.458430960780441,-2.4115552498249273,-3.425774641798202,-3.4513452844137062,-3.5638684797049724,-3.389057325392526,-2.3110184367900013,-3.347955315289125,-3.5219300262018765,-4.271674144103356,-4.420846159555116,-2.1426029536360676,-5.614261666087499,-4.697012607625937,-3.2968754438292547,-3.536593342739269,-2.472473047331775,-3.423100356952325,-3.439556689457878,-3.4754963846153846,-3.4115228609070454,-2.4089121767287978,-3.676742308708051,-3.4849561933581663,-4.3090801898755435,-4.504923228393248,-2.1039487025451713,-5.591839918730199,-4.622272535985544,-3.2296280755680824,-3.1649789302205193,-2.357329261785757,-3.3816479118409397,-3.476342675822932,-3.4059065477170627,-3.555630382554667,-2.4298085882323286,-3.3551976726134782,-3.3299163749256797,-4.242895882777542,-4.746080494671787,-2.1186207523628893,-5.5337016405556705,-4.828905673276139,-3.3816729274340105,-3.1789605496169244,-2.2834228489965804,-3.3730822211512157,-3.4827355102905297,-3.4288812796801817,-3.2795253199258583,-2.3826063156303157,-3.342931520932083,-3.438252449735131,-4.063125926275748,-4.665126230270016,-2.1800535784154516,-5.647032377668454,-4.6302469576563805,-3.610020508921477,-3.5310450011621155,-3.490919903878168,-3.4983530831063083,-3.8897187069690897,-3.637859710557347,-3.6917404249741317,-3.9884464260380263,-3.663557587170548,-3.7508393359706775,-3.5000257943672075,-3.4078950734507836,-2.2231835686248376,-3.462659084188383,-3.43603672047304,-4.199675476127883,-3.4252218360942397,-3.4799992642154733,-3.590735386647349,-3.4207503321700643,-2.4352138509253933,-3.5549430663434367,-3.5255707281505204,-4.220847220357219,-3.526187273349028,-3.379647246181903,-3.583782607841686,-3.4860245459142494,-2.3395190273952053,-3.5639388319514684,-3.7770445196311537,-4.291582652892733,-3.6505775825814943,-3.4256284993113337,-3.67975442909909,-3.5067061662528918,-2.3026777399583094,-3.518977366671471,-3.574918095552335,-4.209711687669179,-3.5892550260802576,-3.1125457130098715,-3.602259669908932,-3.3166789459299393,-2.490607474562629,-3.6347049695506524,-3.508280376860637,-4.2011145711899776,-3.628663872122608,-3.4181202060714657,-3.27943178264781,-3.566981724729271,-4.487529795386701,-3.4293998763046964,-3.572212507102964,-4.41005893969963,-3.5175937510739494,-3.4888449035930322,-4.575491697718313,-3.3629410155915482,-3.4215637208208984,-4.569978407581353,-3.320407003086913,-3.4660926320296657,-4.512476395221986,-1.7661625768334468,-2.118772120163835,-2.1504538118675454,-1.3163211216996273,-1.8751425400345068,-3.5761286499773455,-3.314272100275003,-3.252318776284924,-3.226931895650405,-3.3080742057820793,-2.918425199230463,-3.451752133939423,-3.5053605439905993,-3.1657548874807313,-3.17772833740144,-2.8436674438443754,-3.1267071119314265,-3.4274474558397205,-2.8992603370393177,-3.052479367921138,-2.742805593266528,-3.1769196302329283,-3.033661564140905,-2.2612525759619824,-3.328408024759734,-3.3856280557125724,-2.9472055618033783,-3.519426534946762,-3.6491495879669276,-3.485669962599128,-3.6724577201596222,-3.5933543576227653,-3.5597106409034107,-3.3645848023210148,-3.2577724893044033,-1.342865068722689,-0.7410291156003512,0.19989469486781708,-1.7195071703978897,0.42748065251136724,-1.0072606878825368,-0.7398551647304941,-0.6192185181086147,-1.5972198202489118,0.45592485331392085,-1.435626612435002,-1.7941226448226453,0.4415964664873617,-2.7113226998831412,0.38794401362051856,-1.7216350258485875,-1.6020198232173193,-1.4841736718133265,-2.092941995132592,-1.6951194048626665,-0.06267817331878515,-0.4260012046353802,-0.505332644355242,-0.3002854572190133,-0.18067025458774524,-0.06282410318375271,-0.6715924265030182,-0.2737698362330928,-1.2410894255470526,-1.1214742229157846,-1.0036280715117922,-1.6123963948310578,-1.2145738045611325,-0.0977457793773969,-0.1523397840127529,-0.4057933407112373,-1.4460964147777924,-1.3264812121465241,-1.208635060742532,-1.8174033840617971,-1.4195807937918716,-0.0900079697113345,-0.2772911738319162,-0.4374425096155289,-1.248250247139205,-1.1286350445079367,-1.0107888931039444,-1.6195572164232097,-1.2217346261532842,-0.015158204390871545,-0.23001683492398353,-0.3148918617145755,-1.6094884427119898,-1.4898732400807213,-1.3720270886767292,-1.9807954119959945,-1.5829728217260692,-0.05851903322468897,-0.47060448481515216,-0.4868631759033355,-1.7466900555123732,-1.6270748528811052,-1.5092287014771124,-2.117997024796378,-1.7201744345264527,-0.15725525065096974,-0.3327333599034385,-0.593702291922486,-1.4182974296234967,-1.2986822269922287,-1.1808360755882361,-1.7896043989075021,-1.3917818086375764,0.24065942290630524,-0.12266360841028966,-0.20199504813015176,-1.775581632681908,-1.6559664300506398,-1.5381202786466472,-2.146888601965913,-1.7490660116959875,-0.1166247801521056,-0.47994781146870036,-0.5592792511885626,-1.6757727364886943,-1.5561575338574263,-1.4383113824534337,-2.0470797057726995,-1.649257115502774,-0.01681588395889211,-0.380138915275487,-0.45947035499534905,-1.6479350328364877,-1.5283198302052192,-1.4104736788012266,-2.019242002120492,-1.621419411850567,0.011021819693314987,-1.3347747587007053,-1.215159556069437,-1.0973134046654447,-1.7060817279847105,-1.308259137714785,-0.03914093748749799,-1.2210649180291302,-1.1014497153978622,-0.9836035639938697,-1.5923718873131352,-1.1945492970432097,-0.004762536535784897,0.34775841229771576,0.2905383813448772,0.7289608752540713,0.15673990211068745,0.027016849090522044,0.4674868720790982,0.2786145942631286,0.31123903791161844,0.1955823438303457,0.14210741970124155,0.6013711403205414,0.0491102875485989,0.011828808599272503,0.4834869738604965,0.23714068672672414,0.27937233941277934,0.9897579540021508,0.9880717543500275,0.2846434358635399,0.36915617440343906,0.9905428122060458,1.0,1.0,0.30393686234231104,0.36640097857469933,1.0,29.560867427343442,35.058259067505354,22.65200338028205,23.239149425166836,29.817056098812166,0.22276878915289505,0.31415959947762484,0.13043093377527062,0.1237289740399796,0.20891170355422992,0.39743872228567284,0.1695513648632514,0.379894909107133,0.04150800825973676,0.011606995484206241,0.6339860745078759,0.15437942877303362,0.2116344967190908,0.21553106010092218,0.31165528886160754,0.12540474464330828,0.13048190870698748,0.2169269976871747,1.0732972990533252,0.831182540072156,1.5093917064529563,1.4149138610954672,2.5387379620934016,0.5,0.31439299479309163,0.2434721192567082,0.4421348859502003,7708.8051494006695,474.01226096284125,344.4107376615329,1457.4796902342555,119.02341480087522,28.668233536977898,907.4466092515513,445.0844049995875,524.348112410467,759.2699226197667,1070.7601172169555,444.55188436116094,421.70938264013796,712.0403787045606",
		301: "0.2011215847521158,0.17114675838705384,-0.01317049616146998,0.24650843075059153,-0.14234745122383394,0.14536735397809786,-2.8908577425531217,-0.9787713933823274,-2.4416698954082987,-0.5138057970695222,-2.0188003586001537,-2.898113688422412,-1.5092177007327892,-3.145347796323594,-0.6902301819749463,-2.4059439135919636,-2.734493551371176,-1.1220224413645161,-2.484388959598741,-0.9321783742303835,-1.8436230936889229,0.18386262233034545,0.21465388490484866,0.19067095642285964,0.2245406084001523,0.18466931655013846,0.167850251258997,0.1820919264703586,0.18752232438518857,0.23215531469190143,0.21404005790195338,0.16394318045937634,0.22331340558413604,0.21734536442832475,0.2385638636516113,0.19108230254687025,0.1692110674187187,0.19000035484037245,0.192977004075096,0.1898024079171725,0.171850355069207,0.17684871449359557,0.1863677104348218,0.2037606080619688,0.23880021029175963,0.19305580439163963,0.22816344054686197,0.1935200883191602,0.16639960141258456,0.18795003168057345,0.1967966965533815,0.20408511157754855,0.1845585891079456,0.18973249651427743,0.18356498389989934,0.21403473172242032,0.19025701913172194,-3.692389390420426,428813.448953296,510075.1869540503,327510.67009107576,302843.27277620626,398690.5111578241,-2.1981590133062405,-2.915571188728293,-3.4021034999449347,-2.1046023618220793,-4.1789539859005,-2.482486279663322,-3.0682245947433793,-3.411608136888827,-2.134923717132202,-4.142746014728538,-2.4589115598868836,-3.0436382345229034,-3.696919137357124,-2.156316271273213,-4.390381886533443,-2.4685541191815576,-3.0434005215205047,-3.588278574146972,-2.275767098032603,-4.219627396707465,-2.4944013822614517,-3.0004564125270856,-3.6603945798353177,-2.091580761542833,-4.287897710041386,-3.758307805433159,-3.9488069013271763,-3.7246832112720845,-3.8455347392557955,-4.011453950918366,-3.688065239628131,-3.7519745806595055,-4.38730025778921,-3.7110276859832383,-3.6607855373447546,-4.2971330101016605,-3.7031514890140196,-3.922958937061736,-4.096758342897173,-3.6465139799938124,-3.7312436036600847,-3.8028905928620835,-4.139213132112847,-3.7987660035747473,-3.2455058252897926,-4.108285942326252,-3.9304689034584865,-4.00141277664086,-4.095490124189151,-3.1038455204691697,-3.8060453592188006,-3.714862669215249,-4.027734927363397,-3.6751183636686466,-3.304423533844002,-3.9142707232919105,-3.8421100289491994,-4.190082133264655,-3.8874284590301387,-3.3958249800689253,-4.121037482240586,-4.184593005621148,-4.174599930976892,-4.151702751561596,-3.179194151828151,-3.761421730785856,-3.6089899207946456,-4.232796645017115,-3.7684869850066267,-3.395829906354944,-4.068163830386222,-3.899769963824363,-4.216046168334026,-3.92772257278026,-3.392416986680772,-4.37635940463683,-4.045145065754302,-4.247605324200565,-4.261930402356149,-3.204728772237803,-3.761732435338904,-3.6420886480509878,-4.5228965422852765,-4.1591124443029255,-3.302614402819408,-4.0209444787938695,-3.8266231330931935,-4.302834664936238,-3.875397129928753,-3.6411516006035938,-4.084445790454819,-4.071070256988538,-4.479965685510753,-4.163169014404158,-3.2433642725610072,-3.8479887785766684,-3.5935343045516452,-4.044676199926686,-3.9182400020829884,-3.5097040679985056,-3.919121688148028,-3.8741914378461573,-4.169153459615448,-3.9079154135739804,-3.3936325814091517,-4.091682908840426,-4.194051766318617,-4.050708975398792,-4.432263847909663,-3.151025459059573,-3.745582247323343,-3.602908203472417,-4.124275458861626,-3.682897257849983,-3.4564888152026065,-3.7858773514019477,-3.9209316643855163,-3.967816488472841,-4.0798302045977985,-3.6779246871221796,-3.2425770816192627,-3.2994237679917844,-3.325601067984359,-3.350819013483441,-3.460312358841806,-3.7821830839456623,-3.904203315334974,-4.069386544448769,-3.824469270668395,-3.3203003478779785,-3.864051069116682,-3.6840519423941296,-3.8702825766419324,-4.042634893210472,-3.7974358085602815,-4.099675808913692,-3.8815437291309896,-3.3294021429796623,-3.888525635225292,-3.866800124136133,-3.866300896765386,-4.041334827829343,-3.994614329364856,-4.149361218428061,-3.924141798437816,-3.191793585605481,-3.9025966308432185,-3.6397368005110953,-3.9168580055165525,-3.9976981376102407,-3.840930784271465,-4.215861616048323,-3.952399594881798,-3.5223354962446587,-4.000330794036706,-3.8239940655662847,-3.982132022715805,-3.9709422983864178,-3.7928437824158125,-4.140516356710597,-3.89063986320672,-3.5867096166215395,-4.060809066746986,-3.712242496746555,-3.7323444111702524,-3.775550038884495,-4.119065610828988,-3.597766279127261,-3.8971020165370116,-4.189680294036148,-3.8398071442828607,-4.035329809091327,-4.337025357201799,-3.7936824459653167,-3.5724075982764987,-4.090376022529046,-3.7358195200091933,-4.02838530023263,-4.032147669344588,-3.6438694924206696,-1.8012666484202633,-2.158421090326412,-2.1942234160870364,-1.3549740772474634,-1.9206884419640546,-3.5938720818446686,-3.3525739852905083,-3.2809562938701946,-3.262957445518336,-3.340108351764612,-2.961645996916489,-3.4797565586932975,-3.4935739666142567,-3.20652778639955,-3.2176260821887404,-2.887159398993565,-3.168557175672754,-3.3938599711692876,-2.9387322402283895,-3.0857683496609307,-2.7868252012882073,-3.2118088785480157,-3.0586897259251393,-2.3029282418885533,-3.3631450057587924,-3.4154668518461375,-2.9897886581701174,-3.545050518575399,-3.61445997311258,-3.5147095222009925,-3.6797274379574905,-3.6141047226368443,-3.582482392241724,-3.4025332443296885,-3.287330629567438,-0.7853086945043279,-2.6973950436751224,-1.234496541649151,-3.162360639987927,-1.6573660784572959,-0.7780527486350377,-2.1669487363246605,-0.5308186407338558,-2.9859362550825033,-1.270222523465486,-0.9416728856862737,-2.5541439956929333,-1.1917774774587087,-2.743988062827066,-1.8325433433685268,-1.738583797463745,-1.5952146709049888,-1.4855729020653328,-2.117389326936629,-1.702777559222037,-0.0662620868444824,-0.417382624684834,-0.495942689574741,-0.32042307084394095,-0.17705394428518487,-0.06741217544552913,-0.6992286003168253,-0.28461683260223336,-1.2731683187262002,-1.1297991921674442,-1.0201574233277886,-1.651973848199085,-1.2373620804844931,-0.09798995746370284,-0.15276752754740186,-0.40765528319315386,-1.4629067936426008,-1.3195376670838443,-1.209895898244189,-1.8417123231154848,-1.4271005554008929,-0.08854302274835361,-0.2693461334144643,-0.4266681088724967,-1.24227742340027,-1.0989082968415136,-0.989266528001858,-1.6210829528731543,-1.206471185158562,-0.01645665007714721,-0.21727807734924046,-0.303699021231309,-1.6229179854563043,-1.4795488588975478,-1.3699070900578927,-2.0017235149291888,-1.5871117472145966,-0.05919652589043021,-0.4611933706239015,-0.47150102231574026,-1.7533403824303677,-1.6099712558716115,-1.5003294870319555,-2.132145911903252,-1.71753414418866,-0.1536183262357051,-0.3215200241074239,-0.5899090874489815,-1.4478119740392201,-1.304442847480464,-1.194801078640808,-1.8266175035121048,-1.4120057357975127,0.2245097365800423,-0.12661080126030913,-0.2051708661502164,-1.7858695483674398,-1.6425004218086838,-1.532858652969028,-2.1646750778403243,-1.7500633101257324,-0.11354783774817724,-0.4646683755885286,-0.5432284404784359,-1.689479270261483,-1.546110143702727,-1.436468374863071,-2.068284799734368,-1.6536730320197757,-0.017157559642220477,-0.3682780974825719,-0.44683816237247914,-1.661263103934985,-1.5178939773762286,-1.4082522085365727,-2.040068633407869,-1.6254568656932773,0.01105860668427793,-1.3614239424215773,-1.218054815862821,-1.1084130470231655,-1.740229471894462,-1.3256177041798698,-0.04022276964266621,-1.2475648243409347,-1.1041956977821785,-0.9945539289425229,-1.6263703538138192,-1.211758586099227,-0.004923716451930751,0.32924438466163375,0.2769225385742886,0.7026007322503087,0.14733887184502725,0.0779294173078462,0.4531484387528679,0.28439771495748556,0.30481409775740753,0.1843988520701689,0.13492573230132682,0.6098032961226332,0.04743371460008303,0.023438404905788017,0.46946065751072574,0.2521777760520519,0.2783615664372223,0.9892555128566507,0.9874739970537996,0.2882680868092449,0.37048785657945915,0.9900756956051684,1.0,1.0,0.308328190255889,0.3667402273204461,1.0,28.185082857553482,39.33212840211601,20.36333144783933,22.397476418305597,30.22216409632227,0.20964721099347092,0.3480030267787932,0.11568462932934351,0.1176571690105143,0.20900796388787798,0.37613473526412244,0.16608880160705894,0.402885747808683,0.04210057889377139,0.012790136426364418,0.6175335328081609,0.16415926350093546,0.21830720369090395,0.21494267519017707,0.3152900626533261,0.12443273311191182,0.12919943473734016,0.21613509430724503,1.074925291278195,0.8567289540073345,1.5050614934712683,1.3894611485318729,2.4826238727493912,0.5,0.3127768989317225,0.2492871157034503,0.4379359853648272,7633.942328283924,440.29297607110556,322.164978559186,1456.0400189781826,113.25846735439971,55.96436710138547,893.404036098938,479.90526859901985,529.7341597664238,700.8879552436698,1163.4360824632797,386.75431416204526,393.34886553824197,698.7508383480464",
		302: "0.09568583574498818,0.21073811046992752,0.25712287680943163,0.1997509073157136,0.020714272285501698,0.08417981250377231,-1.829431540887379,-1.8676076856518762,-1.647064399417975,-1.7710435399124593,-3.805608075039177,-2.470608845517157,-1.7126347192668319,-2.298186110212427,-2.9879489153238357,-3.56293462659419,-1.4564411423354358,-1.1897016403791918,-1.4905946075958827,-2.555036220978439,-3.187627300323815,0.08478834878972911,0.08064256488325755,0.07848427254388872,0.084950313031699,0.08471893724611215,0.08499933911414065,0.0855470312131974,0.23479506767309163,0.07827802954723023,0.08157159467597659,0.07951401192140424,0.08726248804180316,0.03414436321758409,0.07739304857756855,0.07841128109052285,0.07730662398964586,0.08538464513072691,0.022849172468278767,0.08395237010256253,0.040179691647566726,0.07973070271607591,0.0845084740670315,0.14752231842262625,0.19350459576860035,0.2050810282587909,0.08271770414568867,0.08371925136691598,0.08331135392822867,0.08629533438226766,0.14846255850391796,0.0810262081578823,0.08461865755462195,0.0848070241131202,0.08558053497682103,0.0817968756557922,0.07981832998215711,-3.702183144304644,429514.33690853964,511238.6230365136,327897.42440523783,303236.6216417445,399389.26199617214,-2.7889603745056486,-1.1899357397203154,-2.621483031371425,-0.8517206049868495,-2.5509665357091187,-3.1462428559573445,-1.358763489728261,-2.735898739062348,-0.9292393092120302,-2.580631943915396,-3.2919124813236795,-1.4699492714151914,-2.8434539608615226,-0.8652099362319197,-2.5676680751721133,-2.868557493231947,-1.4298645541074524,-2.648858064789955,-0.9904917413512826,-2.521933764599845,-3.1512868780240244,-1.520093270365574,-2.7518063041409655,-0.9857053394676621,-2.4865975264621447,-3.4183391066675313,-3.7279228189955504,-3.8140734411378845,-3.57537278637977,-3.7898430636795974,-3.8574783810317146,-3.333778307939521,-3.792619427461965,-3.948629148514863,-3.672738442087365,-3.9006207621661115,-3.8405749223594503,-3.530979193106487,-3.779761081834687,-3.889044183553603,-3.1154498013895413,-3.5333648960250663,-2.850037057086866,-3.3243809782876683,-3.613377410078181,-2.9561042049941424,-3.5169115547307492,-2.987848389009791,-3.393250460632234,-3.4279887318884907,-2.7868453372556394,-3.924173191382713,-2.7414820621968348,-3.914264839279399,-4.178103074439888,-3.1601912927178097,-3.5989677713406545,-2.8793656116918007,-3.5522352738211986,-3.627973176044002,-3.0758963972942035,-3.8358128645266834,-2.909140903789188,-3.241370897454754,-3.492767857105261,-2.7735130386377973,-4.089677026811305,-2.952628919273099,-3.8814920908426376,-4.114824959949541,-3.1264151446940236,-3.5149353899006774,-2.856210581474043,-3.5575451649638055,-3.6513654940881413,-3.145417613133627,-3.796554243542158,-2.9672684084571457,-3.5441863160367704,-3.6180500202732904,-2.9167857105440285,-3.8661367962934614,-3.210543064361346,-3.89083896707277,-4.123561940132024,-3.3767182630181827,-3.768737386501263,-3.232360294283563,-3.387810435578685,-3.634397712061144,-2.889817739038651,-3.7769681914131437,-2.699864771474628,-3.285054887222908,-3.5552364965815353,-2.858607978765309,-3.960055041627188,-3.0213369463225654,-3.94090371605562,-4.156558260178788,-3.234784449806028,-3.4681496796662037,-2.872486781150189,-3.457187341902283,-3.589221176904057,-3.0744903236247745,-3.8743839296472045,-2.73660240549723,-3.3140615734992247,-3.6871536233067217,-2.749649500993635,-4.049516124773994,-3.071280818998452,-3.8328990724453265,-4.003231133121344,-3.870333369751848,-3.8864151353370877,-3.682760723475125,-3.8751063511799986,-3.6626504624228016,-4.110356953654072,-4.166297111641953,-4.50589706297486,-4.246967139641762,-4.458249458271091,-2.8737676120415445,-3.9483740716220854,-2.811215944367461,-3.6360467069711704,-4.568212065569161,-5.1258593544652875,-3.504955938442938,-3.723561809880724,-3.017670238837622,-4.194481250870114,-2.891847632665508,-3.6879672473895417,-4.611798948556321,-4.94627536849556,-3.477103522695011,-3.8320104550787213,-3.111109144458646,-4.345520485403708,-2.61514636540966,-3.298623098289078,-4.555849781951431,-5.070790641737105,-3.6638227045393634,-3.942547732181098,-3.14269434888377,-4.181892653765731,-2.930515084940236,-3.97317892839561,-4.635586045432481,-4.937555588194869,-3.7269693236763097,-3.8571156969784925,-3.0600299543321583,-4.153573028744999,-2.977177362632925,-3.583246255702569,-4.780009636421178,-4.941981745202902,-3.6019593427419387,-3.9259928683116456,-3.2559083005073894,-3.726999354703457,-3.7954788545439686,-3.587579517321046,-3.7783738073819566,-3.9353440734865734,-3.5787031555146918,-3.9123879639913093,-3.6714684496900283,-3.359962109694778,-3.719159638147716,-3.8791999849611942,-3.384451419050813,-3.7827424137466004,-3.8582367405941023,-1.84431693069837,-1.9838562616448316,-2.2257917030095826,-1.286545869103021,-1.955105825253794,-3.584354532856621,-3.3811257415435976,-3.3143732146932834,-3.2554606179422305,-3.3583543086893664,-2.957517814359241,-3.4776275404785797,-3.504822936705017,-3.1856256117692663,-3.2497140284394193,-2.8852891230169195,-3.183392774484328,-3.407068269014868,-2.923805743722069,-3.125528599864846,-2.8029788085664915,-3.2475467847572,-3.100218200926797,-2.348179837662971,-3.3156705828265967,-3.4525367204381627,-2.9738010283690683,-3.5532146035619716,-3.655594151449021,-3.5589054275395307,-3.668408680675775,-3.6326782337065295,-3.56562564619594,-3.4285697187315303,-3.3196780197984634,-1.8629578495330472,-1.82478170476855,-2.045324991002451,-1.9213458505079668,0.11321868461875084,-1.221780544903269,-1.9797546711535943,-1.394203280207999,-0.7044404750965905,-0.129454763826236,-2.2359482480849904,-2.5026877500412343,-2.2017947828245434,-1.1373531694419872,-0.504762090096611,-1.750512039077998,-1.6075258920804714,-1.4846547559883057,-2.1472141217631284,-1.7072075352049183,-0.07141873930483647,-0.40775010249245525,-0.485129413578403,-0.33876705445600697,-0.1957809074584803,-0.07290977136631506,-0.7354691371411379,-0.29546255058292775,-1.292986852066403,-1.1500007050688763,-1.027129568976711,-1.6896889347515343,-1.2496823481933241,-0.09421195820576918,-0.1504952718983947,-0.4060762387842912,-1.4774380932523201,-1.3344519462547932,-1.2115808101626282,-1.8741401759374505,-1.4341335893792404,-0.0891069616483979,-0.2626937892728922,-0.4167021100425787,-1.230998090827313,-1.088011943829786,-0.9651408077376208,-1.6277001735124437,-1.1876935869542333,-0.01643930647041521,-0.20440146014953128,-0.29041134108843575,-1.631515954197034,-1.488529807199507,-1.3656586711073424,-2.028218036882165,-1.5882114503239548,-0.06083557960972638,-0.45205621646927574,-0.45491770196464343,-1.759134066262396,-1.6161479192648693,-1.4932767831727038,-2.155836148947527,-1.7158295623893167,-0.153333615086535,-0.3142206099400968,-0.5864557737563059,-1.4744896263194143,-1.3315034793218876,-1.2086323432297221,-1.8711917090045453,-1.431185122446335,0.2046036734537471,-0.13172768973387153,-0.2091070008198195,-1.7896917685284364,-1.6467056215309097,-1.5238344854387447,-2.1863938512135674,-1.7463872646553573,-0.11059846875527496,-0.4469298319428935,-0.5243091430288415,-1.6993674735361506,-1.5563813265386242,-1.4335101904464587,-2.096069556221282,-1.6560629696630715,-0.020274173762989296,-0.3566055369506079,-0.43398484803655585,-1.6672676650912437,-1.5242815180937166,-1.401410382001551,-2.0639697477763743,-1.6239631612181642,0.011825634681918211,-1.3837068269827355,-1.2407206799852089,-1.1178495438930436,-1.7804089096678668,-1.3404023231096565,-0.04094489039719286,-1.2703444508168507,-1.1273583038193238,-1.0044871677271587,-1.6670465335019815,-1.2270399469437712,-0.004961825317255681,0.38651256147804736,0.24964642386648128,0.7283821159355757,0.1489685407426724,0.0465889928556229,0.4118197397070773,0.29542831798879143,0.29500322848245897,0.2302552668159593,0.10547616415276803,0.6031901829363348,0.04539030715453843,0.015688078940399468,0.43356397121057894,0.2834917745322973,0.28294425425712383,0.989079120340757,0.9872639877149916,0.2891970821151215,0.3711840554457271,0.9899116904853169,1.0,1.0,0.3093360555449677,0.3672188119580191,1.0,23.84987384337672,36.295307183336874,19.40347885025497,22.478830556533207,29.569312125552234,0.190449392755053,0.3449768672999899,0.11828602788808716,0.12672759832530914,0.21956011373156087,0.3615467884193061,0.16002753786162985,0.4229161913214482,0.042429551719848094,0.013079930677767923,0.5991365766484027,0.17609251460407166,0.22477090874752595,0.21249334694666466,0.31825874311799246,0.12381806258952935,0.12895225109613706,0.21647759624967663,1.0670050880184867,0.884421672567743,1.5021977473891843,1.354003306641673,2.4202533788939538,0.5,0.30895225741954996,0.25608506962044036,0.4349626729600097,7649.630948803897,544.1785626399651,249.27928118711765,1425.5620350747229,107.27412426524884,37.076746892363246,849.3328616245602,555.3479903744034,554.275422096158,633.6830119609747,1147.8428844804969,393.57356482321575,421.6612352691884,730.5432281154817",
		303: "0.12868417444689542,0.11896852945769756,0.33365452593707556,0.12805144080124747,0.27236127434415436,-0.20147020424130038,-4.083890692275539,-1.574234147817659,-6.5453604176888875,-1.4370305374385317,-0.8831713457382369,-3.5801251060618835,-0.9921476753188869,-6.088709579208688,-2.14968466865389,-1.3903823505637591,-3.4357908590298543,-1.2123273348600865,-6.33108315920075,-1.3217899440180416,-0.6671285372505664,0.12809499206289593,0.12812582275737397,0.12837636804006095,0.13028869332047402,0.12633545784698902,0.12059494074148289,0.12718433657409706,0.12928873805977464,0.12936898107750963,0.12762611041286506,0.12196210775436411,0.12563354108325064,0.13000475962981972,0.1297907423477528,0.12713735901741835,0.12047841693095478,0.1274327964770521,0.1294168322117191,0.12812928589409256,0.12805392386066716,0.1280717739093711,0.128106920837857,0.1282473316698892,0.2302615076741118,0.14603790784940723,0.12989635588986995,0.1261908456795184,0.12100674038838125,0.12700126563458441,0.1300530040031736,0.12823574749637798,0.1281324061195752,0.1280884959877396,0.1280902865409474,0.12815361565985997,0.12841613719463868,-3.7163014471904163,430148.01992050064,512386.4659209941,328290.997970061,303658.2828770137,400119.8052242876,-1.624127346120368,-1.5129403444892633,-1.9640142514663703,-2.1508919497164767,-3.6981853235132918,-1.9532777039330398,-1.6013233234607125,-2.0115982135546857,-2.2841092924901596,-3.823854214460124,-2.069838607149608,-1.5176523202371526,-2.015970424246431,-2.2891207684745547,-3.8658562078622136,-1.891872066070296,-1.4676166644570616,-1.8947730657315178,-1.9815248404909658,-3.853141592128541,-1.8389925395969602,-1.498204914533122,-1.974690115414631,-2.0476487575736653,-3.8863744094536883,-3.84833043880884,-3.582230823791052,-3.4226621225039917,-3.967010229421726,-3.4052916194901663,-3.4282017037493473,-3.9398897999516405,-3.6817252430320377,-3.580884732437641,-3.865815514169245,-3.7871603696627565,-3.4920662346619684,-3.88292136095698,-3.5720279069020964,-3.3173417643680714,-3.7667263098777193,-3.9380613627646834,-3.7172947420077906,-4.084351774372393,-1.694245817231214,-3.488542058569181,-3.6091078210259453,-3.2686975341180955,-4.04028626147026,-2.4631748393855397,-3.2266633533461677,-3.465160651213745,-3.4441405613141036,-3.816721701708412,-2.071107414887693,-3.9165902355350903,-3.8626022844758845,-3.9440814596749614,-3.942884224767014,-1.6724811494380798,-3.6172198776157227,-3.7849399456080834,-3.6398554482016654,-4.122069463880174,-2.3504688935700377,-3.4720146356142165,-3.543283235026158,-3.4449375093687498,-3.931024038654295,-2.1819094929158904,-3.968233902520849,-3.711973372930558,-3.747545847938817,-3.8320091441907,-1.6869159395362574,-3.4278206366002695,-3.638445217902953,-3.8227685616728704,-4.171993423536405,-2.514307318171468,-3.708617722057726,-3.535480745395907,-3.503237939554505,-3.982417620471045,-2.3266576658666636,-3.611229751544758,-3.906734540596284,-3.932905098114211,-3.8677523241261826,-1.7298163291926856,-3.504489425727918,-3.8058591767865977,-3.5727759113191935,-4.265995447826878,-2.432191010171908,-3.279561492058544,-3.512427739777726,-3.5048429224331716,-3.9810252019857866,-2.2213673132858194,-3.9038037370349516,-3.8828803171203248,-3.9443876858166447,-3.990963524980393,-1.7925835062171203,-3.4493536445129913,-3.764635879383889,-3.4525930450892726,-4.101782939882527,-2.3638750670733777,-3.640993498347907,-3.55082944823884,-3.425208977205938,-3.8594958685659004,-2.302174607593697,-3.8990949375440347,-3.7109462647027702,-3.869198493077546,-4.1654613256953485,-3.8167765611176225,-1.925994908248085,-1.9361465266502234,-1.8318069158803651,-1.909526209013145,-2.052462053050309,-3.568525493966238,-3.8199269991037332,-3.577104564424541,-3.9449228360550825,-2.3263263007970187,-3.5229397263431994,-3.7056296299386675,-3.793871786931856,-3.7281071567211583,-3.82811952163669,-3.8080200415866785,-4.015331359797028,-2.5078326990131927,-3.5267260597987953,-4.0043961711453315,-3.9798499787361035,-3.6970781257626104,-3.8625199278732953,-4.003713609937077,-4.226166285282675,-2.585862443722217,-3.656957388250474,-3.942993901640786,-4.073990724529128,-3.86180893635934,-4.067743866623445,-3.71756909981167,-4.046512102950418,-2.4929969416042574,-3.848658696478278,-3.988856230357639,-3.7828753042182655,-3.554131788540213,-3.7190347792042733,-3.6545693365914964,-3.9551389460816906,-2.4627203160822804,-3.5753493604588518,-3.754086048598297,-4.023470076082589,-3.8512600740110963,-3.731918342372015,-3.671722395803086,-3.9951432522491666,-3.66496498605174,-3.472050403836552,-4.051296441565381,-3.9472387206653714,-3.794941879268248,-4.009674634207474,-3.5931008404892997,-3.7418225127569373,-4.00066733414896,-3.764997653832289,-3.54333223056683,-1.8466616024247242,-1.9095814215569165,-2.1933615224479692,-1.3259146416808938,-2.0002061349899036,-3.6075934212487253,-3.397533493319493,-3.325401269510719,-3.2889194286661163,-3.389334551596132,-2.997281356208029,-3.5075445387266333,-2.6538656769208653,-3.20891651836779,-3.279481367411892,-2.9205172073477845,-3.223734653834216,-3.133796659506805,-2.9558256097720466,-3.152327555392522,-2.8382267571542084,-3.2828810453497357,-2.8768315474589454,-2.284360598312931,-3.340757930304419,-3.479251769292133,-3.011466780400222,-3.5830814131494,-3.26932069017579,-3.5634743198133405,-3.68523208989606,-3.6549455468041834,-3.5930399828266584,-3.4511649769040114,-3.3421875932550935,0.38170754797089534,-2.1279489964869853,2.8431772733842435,-2.2651526068661125,-2.8190117985664074,-0.12205803824276051,-2.7100354689857573,2.386526434904044,-1.5524984756507538,-2.311800793740885,-0.26639228527478975,-2.4898558094445575,2.628900014896106,-2.380393200286602,-3.035054607054078,-1.7624248196467673,-1.6274453054357743,-1.4884832728637198,-2.1715313901377677,-1.7080963129044777,-0.07514766796852193,-0.39885188763030205,-0.4757064899885325,-0.348660248599227,-0.21368073438823376,-0.07471870181617975,-0.7577668190902278,-0.2943317418569377,-1.3130977996477322,-1.178118285436739,-1.039156252864685,-1.7222043701387333,-1.2587692929054433,-0.0899746125490225,-0.14862988590221815,-0.40396184695909937,-1.4929533006138291,-1.3579737864028356,-1.2190117538307819,-1.9020598711048293,-1.4386247938715393,-0.08918798725315821,-0.2564014505336271,-0.40772432042828194,-1.2243787995421316,-1.089399285331138,-0.950437252759084,-1.6334853700331322,-1.170050292799842,-0.016213918242593016,-0.19305627143982193,-0.2786942093041936,-1.6420063398497984,-1.5070268256388049,-1.3680647930667513,-2.051112910340799,-1.587677833107509,-0.06230570909103041,-0.4427852707538666,-0.43944596854814555,-1.725486568411263,-1.5905070542002697,-1.4515450216282155,-2.134593138902264,-1.6711580616689736,-0.19954575490337398,-0.2963509520129856,-0.5670591106523597,-1.4987219354263346,-1.3637424212153413,-1.224780388643287,-1.9078285059173354,-1.4443934286840452,0.18855521625191088,-0.13514900340986913,-0.2120036057680997,-1.7945796404227263,-1.6596001262117333,-1.5206380936396793,-2.2036862109137276,-1.7402511336804372,-0.10730248874448094,-0.4310067084062609,-0.5078613107644914,-1.7102591206204814,-1.5752796064094885,-1.4363175738374343,-2.119365691111483,-1.6559306138781924,-0.022981968942236176,-0.3466861886040162,-0.42354079096224667,-1.6751787366223128,-1.5401992224113192,-1.4012371898392648,-2.0842853071133134,-1.6208502298800231,0.01209841505593308,-1.4057864817323906,-1.2708069675213975,-1.1318449349493434,-1.814893052223392,-1.3514579749901017,-0.04221354971592542,-1.2928626048182026,-1.157883090607209,-1.0189210580351553,-1.7019691753092034,-1.238534098075913,-0.006144275159967575,0.3755435168859975,0.23704967789828313,0.7048346667901941,0.13322003404101634,0.4469807570146265,0.4417901916612387,0.3150031126185373,0.3104736740252153,0.1800865750492342,0.07918913403820238,0.4686526472461423,0.031633606482794646,0.2404380371836266,0.43164622723791113,0.28676448755630496,0.28158928520578397,0.9901456469365735,0.9885342631309293,0.2967329192706194,0.35605612026797706,0.990903808538073,1.0,1.0,0.3166324678664969,0.3537728438107983,1.0,25.34855300681033,30.722480840944257,19.297357567548353,20.56302313879824,33.81163869335948,0.20669055936545888,0.2984031966801124,0.12008986527713626,0.11836454566042012,0.2564518330168724,0.34340076708229894,0.1519436974792871,0.4274898369139176,0.04134995719614275,0.035815741328353794,0.5823875417073536,0.187159711899295,0.23045274639335178,0.21191306818854408,0.3162731884742045,0.12344524285829003,0.12789348055256536,0.22047501992639623,1.121213769124014,0.9085269236844002,1.5023544163401201,1.4319408488774852,2.381387862214619,0.5,0.3174358941297874,0.2572204019453527,0.42534370392486,7632.186675272335,436.3011482266491,191.8538908216559,1135.4188287330646,76.63968747931366,582.5164461698398,847.3880712559702,562.9628864591206,552.8031666204245,670.980089826972,968.707058163478,389.84803581903526,384.2471263485764,832.5202393482361",
		304: "-0.10601006107063919,-0.06568637015637532,0.0659614660271801,-0.19990485101340483,-0.4545956573124786,-0.12047057077074849,-2.4398361297810327,-1.4762563625263976,-1.8613615952669258,-0.9007901843450681,-3.608973134491315,-2.808434845647129,-1.6681049323935806,-2.4665825915593462,-0.989392740224861,-3.41341932641455,-2.372371269232899,-1.2340866480974244,-1.7799655462213397,-1.200320298289392,-2.5182847227081746,-0.1187863224257724,-0.11639935795259843,-0.10431760317833896,-0.12094397305681111,-0.11899221291600985,-0.11700100465992516,-0.11920202273374343,-0.0733535368342504,-0.12472745727612296,-0.11710695168373607,-0.11040268461084969,-0.11755967989474991,-0.09425767131942353,-0.12291984118097572,-0.1045590530194562,-0.10156925369637837,-0.10408252769363943,-0.07153758512629291,-0.11609940136950989,-0.12037312763580976,-0.11966573383291468,-0.11781116220891172,-0.10999942764648309,-0.07621238211007454,-0.1475315001368016,-0.122580781506249,-0.11668095651042806,-0.11192266161126822,-0.11674583512664309,-0.08084771440618019,-0.11131433362366917,-0.11611911302549739,-0.11815102128354785,-0.11872061969497515,-0.11635718526424865,-0.10442470018198675,-3.7619746174438746,430819.0000103276,513355.1729791576,328680.84600588004,304042.5300033623,400952.32546363585,-3.788830558901378,-1.3545812733268476,-6.21967381345373,-1.4957472246593195,-0.7962960039363913,-4.0395075414642045,-1.3509370779457226,-6.359244334862703,-1.6037313263152637,-0.9204017837628494,-3.885717113730321,-1.7118174591757729,-6.467605024055432,-1.5461296617673441,-1.1588372835125351,-4.204077700527685,-1.4471876637033854,-6.4832067351676725,-1.5330646846017055,-0.9333795420453835,-4.1035547825501215,-1.350903970173912,-6.392699789723814,-1.6793636054761827,-1.0276668401653932,-6.369975645917364,-6.402395838750131,-6.959721540357857,-6.518486372426773,-6.498056897389093,-7.028183466132046,-6.330353337845112,-6.6067605510986365,-6.830150578915237,-6.4247643414414926,-6.533012703693767,-7.0808325449832905,-6.434614783900747,-6.616830710695554,-7.06982587150494,-5.445016269541989,-5.225574753588139,-4.194411636063318,-5.6038165553642685,-6.308599692860991,-6.415817057301837,-5.761814782987363,-4.265344400526308,-5.017498930993682,-5.684304615824823,-5.708109285238904,-5.673340148649804,-4.041868797107768,-5.603317706443205,-6.174583871467515,-5.605466227585625,-5.32121303570398,-4.1159699054892895,-5.711516039208713,-6.414178742666546,-6.145748304799377,-5.8917594997897735,-4.32173154862516,-5.176412425224419,-5.829608398832459,-5.989101448153434,-5.5227454852816455,-4.099569831872491,-5.711321622173763,-6.153722086615015,-5.858945479703706,-5.195282715124056,-4.190963472076862,-5.698843571308503,-6.581526321741591,-6.3700947221504585,-6.109079445131061,-4.316420910289742,-5.005294378315521,-5.912448043777609,-6.198903305869515,-5.615072261256247,-4.260953664821173,-5.878493655594998,-6.452040778841508,-5.6703736341388264,-5.387055009805806,-4.228904338704393,-5.687852746998444,-6.430905387173733,-6.3359046220120465,-6.0381838773556815,-4.588212800741032,-5.141778861642773,-5.614715489723788,-5.8804312476100025,-5.570008259783616,-4.1573047054445285,-5.964903427601737,-6.133323727119521,-5.609105288482159,-5.253518160334204,-4.0229950508560135,-5.475463798663213,-6.265828348062893,-6.329635344243592,-5.860883616405309,-4.38372162792167,-4.971528775684597,-5.793883683243272,-5.807359876287173,-5.5405106264521296,-4.241985484721397,-5.729515082363682,-6.350671827080685,-6.4700663166777925,-6.452648441001504,-6.521515488966702,-6.587448696893241,-6.3799381900674215,-3.3168376917671716,-3.5310714432890635,-3.6328898038893116,-3.531592116439124,-3.689383963382287,-5.785223374409018,-5.1117687645310745,-4.192836426399724,-5.4928314587269975,-5.520276910266584,-6.7266503008060266,-6.373967832178856,-6.132815412711475,-5.758234067884297,-5.238191307452339,-4.191803236122991,-5.542305001821186,-5.633110109518743,-6.535607402604079,-6.421525795743044,-6.417935647104213,-5.707413529238615,-5.365105850735039,-4.364340761517816,-5.689264473847199,-5.818541024807784,-6.64608809081021,-6.56969512137429,-6.414534634034069,-5.823330148919031,-5.094956136293589,-4.377240801212547,-5.506624021578485,-5.924758430579559,-6.6774759963409895,-6.410279748821996,-6.297471368958977,-5.948224359461491,-5.042235352245849,-4.258013336379904,-5.590886657783777,-5.698015901321641,-6.7703590190675165,-6.612090200681866,-6.24719067788715,-6.398806242620607,-6.572816453846609,-7.1401387668519405,-6.286998287167311,-6.506762010436365,-7.16526653829221,-6.2444593676390845,-6.594716345970783,-7.221875796840966,-6.625844042715446,-6.533834315386007,-7.218218486336479,-6.512511236696897,-6.505842172231959,-7.0969015156412745,-1.8920783684813154,-1.8289003201383522,-2.239115819902675,-1.3453028545901335,-1.6980301924584602,-3.653277183402501,-3.443254982307024,-3.3711484789370574,-3.3344535651410045,-3.4344658448099956,-3.039610565551738,-3.5529419104100692,-2.6996143384252655,-3.254635631799074,-3.325127390382898,-2.9645325310173454,-3.2687996322416533,-3.1794430191797742,-3.0015293812767645,-3.197905563670873,-2.8816452358440565,-3.328477064531078,-2.9225683493910544,-2.3274076090075217,-3.386349451733655,-3.5240268315139076,-3.0545263461893133,-3.628330679769437,-3.314898113894709,-3.6091936142947247,-3.730910868209254,-3.700594319773857,-3.638722577829916,-3.496883117397877,-3.3879378019227846,-1.2764653174093836,-2.2400450846640187,-1.8549398519234905,-2.815511262845348,-0.10732831269910115,-0.9078666015432875,-2.0481965147968357,-1.24971885563107,-2.7269087069655553,-0.3028821207758665,-1.3439301779575175,-2.4822147990929917,-1.9363359009690766,-2.5159811489010244,-1.1980167244822417,-1.7731719625783466,-1.6580082046227491,-1.491920825331468,-2.196045427409365,-1.7436811241125714,-0.07850264457580712,-0.3908386623809569,-0.467218454840361,-0.357327147791925,-0.24216338983632735,-0.07607601054504644,-0.7802006126229439,-0.32783630932615015,-1.331215128008193,-1.2160513700525954,-1.0499639907613145,-1.754088592839212,-1.3017242895424184,-0.0861667399533853,-0.14693827930545444,-0.4020476693088785,-1.5068528168557056,-1.3916890589001076,-1.225601679608827,-1.9297262816867238,-1.47736197838993,-0.0892252871982336,-0.2506512495933654,-0.3995640151697572,-1.2181857173587183,-1.1030219594031205,-0.9369345801118394,-1.641059182189737,-1.188694878892943,-0.01608410448209124,-0.18275002581303654,-0.2681128994082999,-1.6514309369936309,-1.536267179038033,-1.3701797997467524,-2.0743044018246497,-1.6219400985278558,-0.06361401511786413,-0.4344598484312583,-0.42548673321716685,-1.695219886111476,-1.5800561281558785,-1.4139687488645973,-2.1180933509424955,-1.6657290476457012,-0.24111955695998094,-0.28026136628318055,-0.5495861760374893,-1.520561266465042,-1.4053975085094443,-1.2393101292181634,-1.9434347312960611,-1.491070427999267,0.17410805153749742,-0.13822796626765227,-0.21460775872705648,-1.7990049263532475,-1.6838411683976502,-1.5177537891063693,-2.221878391184267,-1.7695140878874729,-0.10433560835070815,-0.4166716261558578,-0.4930514186152619,-1.7200848036876875,-1.6049210457320902,-1.4388336664408092,-2.142958268518707,-1.6905939652219129,-0.025415485685148162,-0.3377515034902978,-0.41413129594970194,-1.6823252838949416,-1.5671615259393439,-1.4010741466480625,-2.10519874872596,-1.6528344454291666,0.012344034107598264,-1.4256883084508079,-1.3105245504952103,-1.1444371712039294,-1.8485617732818271,-1.396197469985033,-0.043355008253418176,-1.3131622876805293,-1.1979985297249316,-1.031911150433651,-1.7360357525115482,-1.2836714492147543,-0.00720877994254354,0.37562516571021964,0.23794778592996702,0.7074482712545613,0.13364393767443783,0.4470765035491655,0.44241449456746096,0.3156666890235543,0.311167771481329,0.1834342308919124,0.08226159765303345,0.46101331313350236,0.031355821166855063,0.24193503715469666,0.4296412073532721,0.28769840888479636,0.2826603837619315,0.9896472003602599,0.9879402710955822,0.2986263062602015,0.3587516410807836,0.9904399319836601,1.0,1.0,0.318936500399798,0.3543855105150345,1.0,35.932768991744396,44.5616282887128,26.691024081927456,32.928692366028336,40.691924145417694,0.21074394020228143,0.3114214742143179,0.1194288348129206,0.13629451683630175,0.2221112339341782,0.3274041134632603,0.14497548749666173,0.43084218453587614,0.04035054359321398,0.05642767091098808,0.5671129082719455,0.19721358159784516,0.23567351013020976,0.21179615538991783,0.31578801704821585,0.1230436020537531,0.128733584180939,0.22063864132717445,1.1571638679632992,0.9294917705189842,1.503013635694207,1.4345670084363529,2.3460295571571503,0.5,0.3223594653378661,0.25893521088574933,0.41870532377638464,7637.224369762923,451.60252304296483,202.52242380837467,1134.9832272590586,77.19588586156345,595.6275045301353,849.6353811175326,568.9369248018897,558.9739968469244,673.9056977037513,995.84692997051,381.9031388200079,435.83531452245904,710.2554214777517",
		305: "0.29159692486496175,0.31029079846296986,0.08955476434325738,0.2617398331191027,0.3738839134284821,0.2967177729967309,-3.1452659530035922,-1.1072680276336446,-3.063375318983459,-2.0093792471227956,-4.525820385345199,-3.53284074821208,-0.6282715486089985,-3.0293925849638823,-2.4005832820748423,-4.283981901461117,-3.007662061194156,-1.1672887225131325,-2.1388561675756472,-1.6803229287112686,-4.486281759906206,0.29604168608436077,0.29816657350063175,0.297173185582239,0.2946621342190302,0.2963401305228933,0.29818774583496804,0.2954096076944752,0.290248011614664,0.2953933125721952,0.29755154839243414,0.30164839450090253,0.29642237753791467,0.3023625069671024,0.2963134117098191,0.297244422675115,0.29765037037093584,0.29693107617319575,0.3087588681685115,0.2962021246087759,0.2638274841930178,0.2785203118549205,0.2964248743128229,0.2978667647672071,0.30771439436174375,0.2430454815105983,0.29436015872774834,0.2966917764831955,0.29826581805146785,0.2954653786422733,0.29703392730247813,0.29704256257543077,0.29575762999823785,0.29603170346101687,0.2955760005027339,0.2975144420704815,0.2964512471142399,-3.7802305286219706,431492.9057080314,514351.0199091281,329062.74914470006,304478.3653178847,401662.5808851136,-2.653908466357934,-1.5742050512910253,-1.9843637092657234,-0.7455676580359787,-3.569607599582812,-2.7286473532396722,-1.4053986673853371,-2.105857202059172,-0.8589916670682758,-3.6361553897776577,-2.9481118043500896,-1.587540541986221,-2.001696048525228,-0.9043083651442129,-4.03625551031548,-2.7652022556782696,-1.6250649545398475,-2.206773379011945,-1.140786720738575,-3.6194064062330935,-2.855594013659193,-1.6220883505705936,-2.016820471358728,-1.0991732630204771,-3.571214905592055,-3.5401537942477863,-3.9181411057869755,-5.561296470493555,-3.7111342079662117,-4.0920277203046975,-5.545203835458555,-4.034003301506962,-4.205455348563154,-5.689471890788564,-3.9942322791578606,-3.8499378698030093,-5.673824594376611,-3.754076627692017,-3.899267736305105,-5.380208524438604,-3.6982585722728065,-3.7412882722524845,-3.724046578625098,-3.686320850326851,-2.8661832230189006,-3.4559355600142077,-3.8472751323055223,-4.527488107863592,-3.717036282843033,-3.743705472924432,-3.620057334918735,-5.4499118618715885,-4.627706013430942,-5.3093216230027,-2.9174453826793956,-3.5809443855817022,-3.526749404805859,-3.765408861957677,-3.722668388432332,-2.893278009477942,-3.3208772292542847,-3.731685096878378,-4.61239914684826,-3.8430326558886367,-3.893467333715078,-3.404956793321504,-5.580909554291556,-4.72076092563179,-5.454897848244518,-2.863584614735336,-3.5274800128684265,-3.7345302628497072,-3.8304702506239137,-4.029537925030448,-2.8040818450583274,-3.544455731029008,-4.084955824296472,-4.85221930402967,-3.941055325287857,-3.6864038132319923,-3.372392953819065,-5.816122278380696,-4.628459096949643,-5.448015866603446,-2.7586683802651017,-3.657460148761271,-3.8345963529050957,-3.834727468932098,-3.729817138769293,-3.0321207611363294,-3.459788101238398,-4.111665123267378,-4.794245806198983,-3.6568583186731507,-3.873833435906924,-3.666916307807477,-5.652841908974279,-4.6619647937589335,-5.609068563135535,-2.9587764553967695,-3.5405142317233063,-3.7379611352663513,-3.8466547755776674,-3.7891017108673535,-2.868307296340768,-3.4562757922254077,-3.7870555017521346,-4.761229243513051,-3.7491657452087663,-3.9453166937877304,-3.845511776143967,-5.599968284639569,-4.791833857619237,-5.314058268205257,-2.885688465757644,-3.8280685747474887,-4.019393560698958,-4.300699707689778,-4.009551971201661,-3.868473629905158,-2.5932938083731267,-2.6936850997783,-2.8769394818669825,-2.7452234135822344,-2.788784270948599,-3.4196934506920065,-3.9339668592357193,-4.15988751184646,-3.6802447346204064,-3.0792042938279063,-4.412356553207307,-4.042817634077496,-3.658725032565947,-3.4229432193070086,-4.002284542265937,-4.418004071722067,-3.9073792454494325,-3.070682263831554,-4.593893558336613,-3.918672658788861,-3.8946226721422654,-3.919774879515941,-4.064965140845096,-4.63402086954659,-4.148757418481445,-3.016133335114319,-4.618387836145292,-4.057058153224879,-4.228290261937705,-3.543935156077188,-3.9546543710164186,-4.573391674693583,-3.8906993696805663,-3.151355044957119,-4.796972076287876,-4.099067730738388,-3.666831348962332,-3.5428264725080303,-3.86037050725819,-4.4035353578895355,-3.749164575670473,-3.0815597894587365,-4.523554614675372,-3.7535866409621934,-3.757919927774582,-3.8737654356244837,-3.816997224962513,-5.459917115438551,-3.826961875135116,-4.118412383264854,-5.471112959938139,-3.8352679710699547,-4.112320734399755,-5.510722755682449,-3.8279599617979936,-3.77686795923867,-5.74300771379777,-3.63778483440781,-3.952459549854862,-5.648398427750746,-1.9316366383063512,-1.7914687053488951,-2.2174285737141948,-1.2816252705534283,-1.7432760743678537,-3.6643896774716658,-3.4757252976661,-3.4165929683957397,-3.35485527108196,-3.4546933869000584,-3.076961679596508,-3.5710125060059856,-2.7152305833019925,-3.2697364796207737,-3.3577949301470755,-3.009386875726173,-3.300074260585131,-3.214638539857677,-3.0346180348739225,-3.2434746952679467,-2.926654077165544,-3.3738413349272176,-2.917790366082549,-2.3544540096510405,-3.4000373529120607,-3.5525185768522594,-3.098202161762699,-3.64687156349182,-3.2844964806722543,-3.64976587735801,-3.749269798420833,-3.7123813178792844,-3.6524315147107487,-3.5265436544910327,-3.4333654346918028,-0.6167086644402824,-2.65470658981023,-0.6985992984604157,-1.752595370321079,0.7638457679013242,-0.22913386923179457,-3.133703068834876,-0.7325820324799923,-1.3613913353690323,0.5220072840172425,-0.7543125562497188,-2.594685894930742,-1.6231184498682274,-2.081651688732606,0.7243071424623317,-1.780714155352074,-1.6910835664877817,-1.4990089382890988,-2.2263014104752825,-1.773008457126726,-0.0822364652332569,-0.38220531923844825,-0.45686036537894803,-0.3638761701472014,-0.27424558128290916,-0.08217095308422637,-0.8094634252704108,-0.35617047192185386,-1.3449336866679447,-1.2553030978036523,-1.0632284696049696,-1.790520941791154,-1.3372279884425973,-0.08206827414105682,-0.1452745387040377,-0.3983848341818045,-1.5182557290247258,-1.4286251401604333,-1.2365505119617506,-1.9638429841479346,-1.5105500307993776,-0.09008527747363033,-0.24505848930454724,-0.39051200181121276,-1.2130236979684814,-1.1233931091041889,-0.931318480905506,-1.6586109530916904,-1.2053179997431334,-0.016599742250501228,-0.17335655183538548,-0.25845641792718543,-1.6578113358128148,-1.568180746948522,-1.3761061187498398,-2.103398590936024,-1.6501056375874668,-0.06483851935466114,-0.4256935938788013,-0.4102410827519104,-1.6609838817369187,-1.5713532928726266,-1.3792786646739434,-2.1065711368601283,-1.653278183511571,-0.273934191001009,-0.2592210237363202,-0.5312981698927108,-1.5403180637237037,-1.4506874748594114,-1.2586128466607287,-1.9859053188469133,-1.532612365498356,0.15815962639511325,-0.14180922761007808,-0.2164642737505779,-1.800867749729371,-1.711237160865079,-1.5191625326663962,-2.2464550048525807,-1.7931620515040236,-0.10239005961055406,-0.40235891361574533,-0.47701395975624505,-1.7261507912762122,-1.63652020241192,-1.4444455742132374,-2.171738046399422,-1.7184450930508648,-0.027673101157395207,-0.3276419551625865,-0.4022970013030862,-1.6861722431458872,-1.596541654281595,-1.4044670260829117,-2.131759498269096,-1.6784665449205396,0.012305446972930149,-1.4426101792241952,-1.3529795903599031,-1.1609049621612202,-1.8881974343474048,-1.4349044809988478,-0.04410134311056964,-1.3320189385510215,-1.2423883496867294,-1.0503137214880467,-1.7776061936742307,-1.3243132403256739,-0.008165148577895496,0.38019317570990996,0.22771195176971126,0.6820283668592717,0.13335896513015078,0.4957340479497163,0.4223428647128974,0.3162429588608513,0.32061476431720526,0.18420957970647012,0.0748398991435548,0.43222317909011115,0.03075415229652286,0.27797318976334107,0.41015087749619705,0.29250071718755893,0.297348405316244,0.9914339867722546,0.9900699480386845,0.2896406144257282,0.3506000959592239,0.9921032546498112,1.0,1.0,0.3108054246371885,0.34787081410959264,1.0,27.720540352816588,33.066326506095855,15.932779270416455,22.548448325661877,30.489479173874994,0.22431291802449208,0.31895138232347403,0.09832165831128026,0.12875142193993486,0.22966261940081886,0.3130846600875813,0.13796192866135104,0.4309802839912996,0.039390904463544874,0.07858222279622339,0.5514167051943707,0.20674229515681655,0.2418409996488132,0.21304783165337526,0.3161043535757417,0.1205714076795058,0.1287353679568386,0.2215410391345389,1.1886840641330925,0.9498435099711351,1.5006412963369804,1.4257765189709302,2.320476046926615,0.5,0.32663613765990973,0.26100561523433163,0.41235824710575875,7681.699798905109,462.20407933872474,187.78234409181914,1084.5001485728092,77.16588176742908,697.4682992064879,822.3388850120897,586.454221689393,596.1736753571868,710.5363500786608,1010.3143102258606,311.4448906707654,407.8345831275317,727.4821297663512",
	}

	gettersMap := map[int](func(header string) alloraMath.Dec){}
	for epochNumber, epoch := range simulatorEpochs {
		gettersMap[epochNumber] = GetSimulatedValuesGetterForEpoch(epoch, simulatorHeaders)
	}
	return gettersMap
}

func GetTokenomicsSimulatorValuesGetterForEpochs() map[int]func(header string) alloraMath.Dec {
	const simulatorHeaders = "epoch,time,network_tokens_total,network_tokens_emission,network_tokens_circulating,network_tokens_staked,investors_preseed_tokens_total,investors_preseed_tokens_emission,investors_preseed_tokens_circulating,investors_preseed_tokens_staked,investors_seed_tokens_total,investors_seed_tokens_emission,investors_seed_tokens_circulating,investors_seed_tokens_staked,team_tokens_total,team_tokens_emission,team_tokens_circulating,team_tokens_staked,ecosystem_tokens_total,ecosystem_tokens_emission,ecosystem_tokens_circulating,ecosystem_tokens_staked,foundation_tokens_total,foundation_tokens_emission,foundation_tokens_circulating,foundation_tokens_staked,participants_tokens_total,participants_tokens_emission,participants_tokens_circulating,participants_tokens_staked,ehat_target_i,ehat_max_i,ehat_i,e_i,validator_rewards,topics_rewards,n_active_topics,all_topic_weight_sum,topic_id_0,topic_months_live_0,topic_n_workers_0,topic_n_reputers_0,topic_total_stake_0,topic_total_fee_revenue_0,topic_weights_0,topic_rewards_0,topic_id_1,topic_months_live_1,topic_n_workers_1,topic_n_reputers_1,topic_total_stake_1,topic_total_fee_revenue_1,topic_weights_1,topic_rewards_1,topic_id_2,topic_months_live_2,topic_n_workers_2,topic_n_reputers_2,topic_total_stake_2,topic_total_fee_revenue_2,topic_weights_2,topic_rewards_2,n_active_validators,all_validator_stake_sum,validator_id_0,validator_months_live_0,validator_stake_0,validator_rewards_0,validator_id_1,validator_months_live_1,validator_stake_1,validator_rewards_1,validator_id_2,validator_months_live_2,validator_stake_2,validator_rewards_2"
	simulatorEpochs := map[int]string{
		0:  "0,2024-09-01 00:00:00,1000000000.0,155000000.0,155000000.0,47000000.0,50000000.0,0.0,0.0,0.0,260500000.0,0.0,0.0,0.0,175000000.0,0.0,0.0,0.0,359500000.0,0.0,0.0,0.0,100000000.0,100000000.0,100000000.0,25000000.0,55000000.0,55000000.0,55000000.0,22000000.0,0,0.01897758586916609,0.0,0.0,0.0,0.0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0",
		1:  "1,2024-10-01 00:00:00,1000000000.0,891946.5358508063,155891946.5358508,47321195.640835635,50000000.0,0.0,0.0,0.0,260500000.0,0.0,0.0,0.0,175000000.0,0.0,0.0,0.0,358608053.46414924,891946.5358508063,0.0,0.0,100237219.82336457,0.0,100237219.82336457,25059304.955841143,55654726.71248623,0.0,55654726.71248623,22261890.684994493,0.029534390847954638,0.01897758586916609,0.01897758586916609,0.018848774291770103,222986.63396270157,668959.9018881047,3,1040922.4433738946,1,1,5,7,1116348.8993855934,74337.26358999203,288073.46700455487,185133.48371979792,2,1,9,11,1254714.5661832283,68705.51709378888,293608.26465671515,188690.48041818666,3,1,16,11,1061630.2874523632,198658.64207814567,459240.7117126246,295135.9377501202,3,4000857.234830969,1,1,1220576.890643749,68028.50398354916,2,1,1199203.1614497465,66837.24529860828,3,1,1581077.1827374736,88120.88468054413",
		2:  "2,2024-11-01 00:00:00,1000000000.0,892556.0876362822,156784502.6234871,47642763.289106674,50000000.0,0.0,0.0,0.0,260500000.0,0.0,0.0,0.0,175000000.0,0.0,0.0,0.0,357715510.59799397,892556.0876362822,0.0,0.0,100473549.81130521,0.0,100473549.81130521,25118387.452826302,56310939.59070092,0.0,56310939.59070092,22524375.83628037,0.02942957363192903,0.01897758586916609,0.01897758586916609,0.018734347590631074,223139.02190907055,669417.0657272117,6,3018763.8682387685,1,2,5,7,1178060.0606255261,117255.20797804561,366439.0222759296,81258.60311260991,2,2,13,11,1317611.3929892904,72828.84212954807,308763.91550895997,68469.03015406849,3,2,17,10,1063497.0890552187,257078.24365257853,518901.17231771885,115067.39690043988,7,9131674.264555544,1,2,1288605.394627298,32276.15102324027,2,2,1266040.4067483547,31710.95786197075,3,2,1669198.0674180177,41808.98911048484",
		3:  "3,2024-12-01 00:00:00,1000000000.0,893714.9420089914,157678204.34401512,47964904.57490742,50000000.0,0.0,0.0,0.0,260500000.0,0.0,0.0,0.0,175000000.0,0.0,0.0,0.0,356821809.712844,893714.9420089914,0.0,0.0,100709143.5997001,0.0,100709143.5997001,25177285.899925023,56969046.68745602,0.0,56969046.68745602,22787618.67498241,0.029325098592887015,0.01897758586916609,0.01897758586916609,0.018632684666624637,223428.73550224784,670286.2065067436,7,3414442.1134510525,1,3,5,7,1205146.2616630627,157048.1529678309,430759.1115541107,84561.95220424817,2,3,13,11,1340434.4030406466,128690.22165430253,408671.64168343553,80225.97991389262,3,3,17,9,1005341.0437081808,69978.22220538567,281093.33081820305,55181.190990537914,8,13847295.119007964,1,3,1320881.5456505383,21670.621407440187,2,3,1297751.3646103253,21291.14347616124,3,3,1711007.0565285026,28071.0910600439",
		4:  "4,2025-01-01 00:00:00,1000000000.0,895369.2573357589,158573559.54449186,48287797.46760104,50000000.0,0.0,0.0,0.0,260500000.0,0.0,0.0,0.0,175000000.0,0.0,0.0,0.0,355926454.5817563,895369.2573357589,0.0,0.0,100944137.99797665,0.0,100944137.99797665,25236034.49949416,57629407.42026718,0.0,57629407.42026718,23051762.968106873,0.02922090455510478,0.01897758586916609,0.01897758586916609,0.01854235033056771,223842.31433393972,671526.9430018192,12,10162326.759263812,1,4,5,7,1233333.5790644789,101191.23845614822,358116.8635496657,23664.37611324437,2,4,16,11,1367176.3963452775,96090.68208651715,365342.6159794171,24141.854111638357,3,4,17,9,1023734.7740383601,139624.0069568576,372010.230646927,24582.450345242578,9,17000837.12150543,1,4,1342552.1670579785,17916.188699432085,2,4,1319042.5080864865,17602.455276830296,3,4,1739078.1475885466,23207.777708580954",
		5:  "5,2025-02-01 00:00:00,1000000000.0,897470.9138896127,159471016.33213344,48611602.639522746,50000000.0,0.0,0.0,0.0,260500000.0,0.0,0.0,0.0,175000000.0,0.0,0.0,0.0,355028997.8229737,897470.9138896127,0.0,0.0,101178654.87525198,0.0,101178654.87525198,25294663.718812995,58292347.3017744,0.0,58292347.3017744,23316938.92070976,0.029116935071061188,0.01897758586916609,0.01897758586916609,0.018462072121850616,224367.72847240316,673103.1854172095,16,10935897.706573412,1,5,5,7,1241221.7044355604,154945.29722700221,433517.9730700497,26682.978977909082,2,5,16,11,1375223.681049157,164429.60993747902,468642.01940475305,28844.85979528538,3,5,17,9,1031928.924153441,102075.56069624821,327519.1833925902,20158.766252384,13,23233063.283898953,1,5,1360468.3557574106,13254.589083497,2,5,1336644.9633633168,13022.485723339958,4,5,1189901.9928626078,11592.817942647054",
		60: "60,2029-09-01 00:00:00,1000000000.0,3581503.698255875,866301087.7564648,530618984.13714707,59033003.5116687,0.0,59033003.51166869,44274752.63375152,307561948.295794,0.0,307561948.29579383,230671461.2218454,206615512.2908405,0.0,206615512.2908403,154961634.21813023,133698970.03551042,3581503.698255875,0.0,0.0,110167268.55369735,0.0,110167268.55369735,27541817.138424337,182923297.31248927,0.0,182923297.31248927,73169318.9249957,0.005457002417752981,0.01897758586916609,0.005457002417752981,0.006749671243066904,895375.9245639688,2686127.7736919066,123,125964690.73502372,2,60,138,10,1764873.5709238723,178531.5170035843,554418.0458292353,11822.660004545447,4,60,6,16,2297288.4470820976,270452.4468726318,780802.0103608798,16650.173580759518,5,60,22,17,2824380.5104925665,126436.75764252458,603908.4191354832,12878.015005161746,70,171468999.92581844,5,60,3207156.2520555346,16837.22247031964,6,60,1945441.1977184028,10213.355282554736,8,60,8510534.135369709,44679.381145408544",
		61: "61,2029-10-01 00:00:00,1000000000.0,3512912.217047674,869813942.1815372,532508529.65693027,59179561.89356186,0.0,59179561.893561855,44384671.420171395,308325517.4654574,0.0,308325517.4654572,231244138.0990929,207128466.6274666,0.0,207128466.62746638,155346349.97059977,130186114.51972279,3512912.217047674,0.0,0.0,110258437.53633617,0.0,110258437.53633617,27564609.384084042,184921901.95745546,0.0,184921901.95745546,73968760.78298219,0.005316238669484353,0.01897758586916609,0.005316238669484353,0.006596912577740069,878228.0542619185,2634684.1627857555,126,128417850.68299721,2,61,141,9,1654749.4970299425,266074.9530723745,656721.335363847,13473.619846806307,4,61,6,17,2405905.9326465083,264559.78588107147,796750.0337243289,16346.51790532141,5,61,22,17,2828673.1821609535,248031.23984011367,823008.5783545495,16885.251199073737,67,163770206.54819348,5,61,3223993.4745258545,17378.922334301333,6,61,1955654.5530009575,10541.94707832802,8,61,8555213.516515117,46116.84000965521",
		62: "62,2029-11-01 00:00:00,1000000000.0,3444715.2206078577,873258600.7008849,534360904.6843624,59323120.676837355,0.0,59323120.67683735,44492340.50762801,309073458.7263227,0.0,309073458.72632253,231805094.0447419,207630922.36893082,0.0,207630922.3689306,155723191.77669796,126741454.9154616,3444715.2206078577,0.0,0.0,110347593.13123025,0.0,110347593.13123025,27586898.282807563,186883450.1812175,0.0,186883450.1812175,74753380.072487,0.005178057778929669,0.01897758586916609,0.005178057778929669,0.006446420743752933,861178.8051519644,2583536.415455893,128,136228114.10085717,2,62,142,10,1773305.6642076562,280916.306044214,702730.4825672872,13327.130041742652,4,62,6,17,2411354.771948282,248471.7731392676,775468.8691991698,14706.597649477791,5,62,22,17,2834301.5992273116,280665.59655432403,887597.09221061,16833.08489671329,64,163776419.63806725,5,62,3241372.3968601557,17133.23298384905,6,62,1966196.5000792856,10392.913433988366,8,62,8601330.356524773,45464.87688737801",
		63: "63,2029-12-01 00:00:00,1000000000.0,3376938.8448505057,876635483.9293888,536176366.4702536,59463707.22765105,0.0,59463707.227651045,44597780.42073828,309805914.65606207,0.0,309805914.6560619,232354435.99204642,208122975.29677877,0.0,208122975.29677856,156092231.47258392,123364570.60825458,3376938.8448505057,0.0,0.0,110434761.9974436,0.0,110434761.9974436,27608690.4993609,188808070.21381015,0.0,188808070.21381015,75523228.08552407,0.005042452764509731,0.01897758586916609,0.005042452764509731,0.006298186671451984,844234.7112126264,2532704.133637879,129,136996582.54374155,2,63,145,9,1663683.0803261255,86520.77679476255,399606.6632253117,7387.669305231309,4,63,6,17,2416256.9711647746,149604.04939612505,612123.2930192132,11316.539184696736,5,63,23,17,2839912.627526216,183315.15351357817,731904.9564069079,13530.98503701697,62,161340564.20781276,5,63,3258505.6298440048,17139.62962428512,6,63,1976589.413513274,10396.793596616346,8,63,8646795.23341215,45481.85106091507",
		64: "64,2030-01-01 00:00:00,1000000000.0,3309609.343682694,879945038.7354277,537955185.2707467,59601349.652810216,0.0,59601349.6528102,44701012.23960765,310523031.6911413,0.0,310523031.6911411,232892273.76835585,208604723.78483582,0.0,208604723.7848356,156453542.8386267,120055014.73013525,3309609.343682694,0.0,0.0,110519970.8818309,0.0,110519970.8818309,27629992.720457725,190695909.25924674,0.0,190695909.25924674,76278363.7036987,0.004909415202212565,0.01897758586916609,0.004909415202212565,0.006152202700708248,827402.3359206734,2482207.0077620205,128,139690920.1402359,2,64,146,9,1666145.6367612027,173720.54243636972,529350.1757999331,9406.171242995386,4,64,6,17,2420029.150893007,162256.145761834,625722.9162112246,11118.645406426962,5,64,23,17,2844422.9558718884,144096.94115554754,645943.7193975706,11477.954510564416,62,163289969.53729948,5,64,3275645.25946829,16683.93454365999,6,64,1986986.2071098902,10120.371771868162,8,64,8692277.084473066,44272.61514155674",
		65: "65,2030-02-01 00:00:00,1000000000.0,3242752.9297351297,883187738.1995997,539697644.3413068,59736076.80329689,0.0,59736076.80329687,44802057.602472655,311224960.1451769,0.0,311224960.1451767,233418720.10888255,209076268.81153917,0.0,209076268.81153896,156807201.60865423,116812314.20092139,3242752.9297351297,0.0,0.0,110603246.62885965,0.0,110603246.62885965,27650811.657214914,192547133.4102063,0.0,192547133.4102063,77018853.36408252,0.004778935235991572,0.01897758586916609,0.004778935235991572,0.006008462263519536,810688.2324337824,2432064.6973013473,129,141083339.81785983,2,65,148,9,1669281.0271755345,234497.38789231452,619634.3462938011,10681.564675191936,4,65,6,17,2423735.3660284826,276463.5825983241,806527.2031265899,13903.316583444399,5,65,23,17,2848248.9407087434,186418.25705734326,723503.2319666255,12472.108125035384,64,166520771.38949752,5,65,3292329.19401195,16108.801506247351,6,65,1997106.5788817583,9771.499619339156,8,65,8736549.699614624,42746.43775492581",
	}
	// until shown necessary, skip time and epoch columns
	filteredSimulatorEpochs := map[int]string{}
	for epochNumber, epoch := range simulatorEpochs {
		filteredSimulatorEpochs[epochNumber] = strings.Join(strings.Split(epoch, ",")[2:], ",")
	}
	filteredSimulatorHeaders := strings.Join(strings.Split(simulatorHeaders, ",")[2:], ",")
	gettersMap := map[int](func(header string) alloraMath.Dec){}
	for epochNumber, epoch := range filteredSimulatorEpochs {
		gettersMap[epochNumber] = GetSimulatedValuesGetterForEpoch(epoch, filteredSimulatorHeaders)
	}
	return gettersMap
}

func GetInferencesFromCsv(
	topicId uint64,
	blockHeight int64,
	inferers []string,
	epochGet func(header string) alloraMath.Dec,
) (emissionstypes.Inferences, error) {
	if len(inferers) != 5 {
		return emissionstypes.Inferences{}, fmt.Errorf("expected 5 inferers, got %d", len(inferers))
	}
	return emissionstypes.Inferences{
		Inferences: []*emissionstypes.Inference{
			{
				Inferer:     inferers[0],
				Value:       epochGet("inference_0"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Inferer:     inferers[1],
				Value:       epochGet("inference_1"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Inferer:     inferers[2],
				Value:       epochGet("inference_2"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Inferer:     inferers[3],
				Value:       epochGet("inference_3"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Inferer:     inferers[4],
				Value:       epochGet("inference_4"),
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
		},
	}, nil
}

func GetForecastsFromCsv(
	topicId uint64,
	blockHeight int64,
	inferers []string,
	forecasters []string,
	epochGet func(header string) alloraMath.Dec,
) (emissionstypes.Forecasts, error) {
	if len(inferers) != 5 {
		return emissionstypes.Forecasts{}, fmt.Errorf("expected 5 inferers, got %d", len(inferers))
	}
	if len(forecasters) != 3 {
		return emissionstypes.Forecasts{}, fmt.Errorf("expected 3 forecasters, got %d", len(forecasters))
	}
	return emissionstypes.Forecasts{
		Forecasts: []*emissionstypes.Forecast{
			{
				Forecaster: forecasters[0],
				ForecastElements: []*emissionstypes.ForecastElement{
					{
						Inferer: inferers[0],
						Value:   epochGet("forecasted_loss_0_for_0"),
					},
					{
						Inferer: inferers[1],
						Value:   epochGet("forecasted_loss_0_for_1"),
					},
					{
						Inferer: inferers[2],
						Value:   epochGet("forecasted_loss_0_for_2"),
					},
					{
						Inferer: inferers[3],
						Value:   epochGet("forecasted_loss_0_for_3"),
					},
					{
						Inferer: inferers[4],
						Value:   epochGet("forecasted_loss_0_for_4"),
					},
				},
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Forecaster: forecasters[1],
				ForecastElements: []*emissionstypes.ForecastElement{
					{
						Inferer: inferers[0],
						Value:   epochGet("forecasted_loss_1_for_0"),
					},
					{
						Inferer: inferers[1],
						Value:   epochGet("forecasted_loss_1_for_1"),
					},
					{
						Inferer: inferers[2],
						Value:   epochGet("forecasted_loss_1_for_2"),
					},
					{
						Inferer: inferers[3],
						Value:   epochGet("forecasted_loss_1_for_3"),
					},
					{
						Inferer: inferers[4],
						Value:   epochGet("forecasted_loss_1_for_4"),
					},
				},
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
			{
				Forecaster: forecasters[2],
				ForecastElements: []*emissionstypes.ForecastElement{
					{
						Inferer: inferers[0],
						Value:   epochGet("forecasted_loss_2_for_0"),
					},
					{
						Inferer: inferers[1],
						Value:   epochGet("forecasted_loss_2_for_1"),
					},
					{
						Inferer: inferers[2],
						Value:   epochGet("forecasted_loss_2_for_2"),
					},
					{
						Inferer: inferers[3],
						Value:   epochGet("forecasted_loss_2_for_3"),
					},
					{
						Inferer: inferers[4],
						Value:   epochGet("forecasted_loss_2_for_4"),
					},
				},
				TopicId:     topicId,
				BlockHeight: blockHeight,
			},
		},
	}, nil
}

func GetNetworkLossFromCsv(
	topicId uint64,
	inferers []string,
	forecasters []string,
	epochGet func(header string) alloraMath.Dec,
) (emissionstypes.ValueBundle, error) {
	if len(inferers) != 5 {
		return emissionstypes.ValueBundle{}, fmt.Errorf("expected 5 inferers, got %d", len(inferers))
	}
	if len(forecasters) != 3 {
		return emissionstypes.ValueBundle{}, fmt.Errorf("expected 3 forecasters, got %d", len(forecasters))
	}
	return emissionstypes.ValueBundle{
		TopicId:       topicId,
		CombinedValue: epochGet("network_loss"),
		InfererValues: []*emissionstypes.WorkerAttributedValue{
			{
				Worker: inferers[0],
				Value:  epochGet("inference_loss_0"),
			},
			{
				Worker: inferers[1],
				Value:  epochGet("inference_loss_1"),
			},
			{
				Worker: inferers[2],
				Value:  epochGet("inference_loss_2"),
			},
			{
				Worker: inferers[3],
				Value:  epochGet("inference_loss_3"),
			},
			{
				Worker: inferers[4],
				Value:  epochGet("inference_loss_4"),
			},
		},
		NaiveValue: epochGet("network_naive_loss"),
		ForecasterValues: []*emissionstypes.WorkerAttributedValue{
			{
				Worker: forecasters[0],
				Value:  epochGet("forecast_implied_inference_loss_0"),
			},
			{
				Worker: forecasters[1],
				Value:  epochGet("forecast_implied_inference_loss_1"),
			},
			{
				Worker: forecasters[2],
				Value:  epochGet("forecast_implied_inference_loss_2"),
			},
		},
		OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
			{
				Forecaster: forecasters[0],
				OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
					{
						Worker: inferers[0],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_0"),
					},
					{
						Worker: inferers[1],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_1"),
					},
					{
						Worker: inferers[2],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_2"),
					},
					{
						Worker: inferers[3],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_3"),
					},
					{
						Worker: inferers[4],
						Value:  epochGet("forecast_implied_inference_loss_0_oneout_4"),
					},
				},
			},
			{
				Forecaster: forecasters[1],
				OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
					{
						Worker: inferers[0],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_0"),
					},
					{
						Worker: inferers[1],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_1"),
					},
					{
						Worker: inferers[2],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_2"),
					},
					{
						Worker: inferers[3],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_3"),
					},
					{
						Worker: inferers[4],
						Value:  epochGet("forecast_implied_inference_loss_1_oneout_4"),
					},
				},
			},
			{
				Forecaster: forecasters[2],
				OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
					{
						Worker: inferers[0],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_0"),
					},
					{
						Worker: inferers[1],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_1"),
					},
					{
						Worker: inferers[2],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_2"),
					},
					{
						Worker: inferers[3],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_3"),
					},
					{
						Worker: inferers[4],
						Value:  epochGet("forecast_implied_inference_loss_2_oneout_4"),
					},
				},
			},
		},
		OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
			{
				Worker: inferers[0],
				Value:  epochGet("network_loss_oneout_0"),
			},
			{
				Worker: inferers[1],
				Value:  epochGet("network_loss_oneout_1"),
			},
			{
				Worker: inferers[2],
				Value:  epochGet("network_loss_oneout_2"),
			},
			{
				Worker: inferers[3],
				Value:  epochGet("network_loss_oneout_3"),
			},
			{
				Worker: inferers[4],
				Value:  epochGet("network_loss_oneout_4"),
			},
		},
		OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
			{
				Worker: forecasters[0],
				Value:  epochGet("network_loss_oneout_5"),
			},
			{
				Worker: forecasters[1],
				Value:  epochGet("network_loss_oneout_6"),
			},
			{
				Worker: forecasters[2],
				Value:  epochGet("network_loss_oneout_7"),
			},
		},
		OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
			{
				Worker: forecasters[0],
				Value:  epochGet("network_naive_loss_onein_0"),
			},
			{
				Worker: forecasters[1],
				Value:  epochGet("network_naive_loss_onein_1"),
			},
			{
				Worker: forecasters[2],
				Value:  epochGet("network_naive_loss_onein_2"),
			},
		},
	}, nil
}

func GetReputersDataFromCsv(
	topicId uint64,
	inferers []string,
	forecasters []string,
	reputers []string,
	epochGet func(header string) alloraMath.Dec,
) (emissionstypes.ReputerValueBundles, error) {
	if len(inferers) != 5 {
		return emissionstypes.ReputerValueBundles{}, fmt.Errorf("expected 5 inferers, got %d", len(inferers))
	}
	if len(forecasters) != 3 {
		return emissionstypes.ReputerValueBundles{}, fmt.Errorf("expected 3 forecasters, got %d", len(forecasters))
	}
	if len(reputers) != 5 {
		return emissionstypes.ReputerValueBundles{}, fmt.Errorf("expected 5 reputers, got %d", len(reputers))
	}
	return emissionstypes.ReputerValueBundles{
		ReputerValueBundles: []*emissionstypes.ReputerValueBundle{
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[0],
					CombinedValue: epochGet("reputer_0_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_0_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_0_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_0_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_0_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_0_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_0_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_0_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_0_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_0_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_0_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_0_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_0_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_0_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[1],
					CombinedValue: epochGet("reputer_1_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_1_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_1_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_1_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_1_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_1_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_1_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_1_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_1_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_1_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_1_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_1_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_1_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_1_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[2],
					CombinedValue: epochGet("reputer_2_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_2_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_2_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_2_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_2_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_2_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_2_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_2_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_2_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_2_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_2_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_2_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_2_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_2_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[3],
					CombinedValue: epochGet("reputer_3_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_3_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_3_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_3_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_3_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_3_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_3_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_3_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_3_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_3_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_3_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_3_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_3_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_3_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[4],
					CombinedValue: epochGet("reputer_4_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_4_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_4_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_4_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_4_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_4_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_4_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_4_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_4_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_4_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererForecasterValues: []*emissionstypes.OneOutInfererForecasterValues{
						{
							Forecaster: forecasters[0],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_0_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[1],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_1_oneout_4"),
								},
							},
						},
						{
							Forecaster: forecasters[2],
							OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
								{
									Worker: inferers[0],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_0"),
								},
								{
									Worker: inferers[1],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_1"),
								},
								{
									Worker: inferers[2],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_2"),
								},
								{
									Worker: inferers[3],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_3"),
								},
								{
									Worker: inferers[4],
									Value:  epochGet("reputer_4_loss_forecast_implied_inference_2_oneout_4"),
								},
							},
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_4_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_4_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_4_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
		},
	}, nil
}

func GetTotalInfererRewardForTopicInEpoch(
	epochGet func(header string) alloraMath.Dec,
) (alloraMath.Dec, error) {
	infererRewards := []alloraMath.Dec{
		epochGet("inferer_reward_0"),
		epochGet("inferer_reward_1"),
		epochGet("inferer_reward_2"),
		epochGet("inferer_reward_3"),
		epochGet("inferer_reward_4"),
	}
	totalInferersReward := alloraMath.ZeroDec()
	var err error
	for _, reward := range infererRewards {
		totalInferersReward, err = totalInferersReward.Add(reward)
		if err != nil {
			return alloraMath.ZeroDec(), err
		}
	}
	return totalInferersReward, nil
}

func GetTotalForecasterRewardForTopicInEpoch(
	epochGet func(header string) alloraMath.Dec,
) (alloraMath.Dec, error) {
	forecasterRewards := []alloraMath.Dec{
		epochGet("forecaster_reward_0"),
		epochGet("forecaster_reward_1"),
		epochGet("forecaster_reward_2"),
	}
	totalForecastersReward := alloraMath.ZeroDec()
	var err error
	for _, reward := range forecasterRewards {
		totalForecastersReward, err = totalForecastersReward.Add(reward)
		if err != nil {
			return alloraMath.ZeroDec(), err
		}
	}
	return totalForecastersReward, nil
}

func GetTotalReputerRewardForTopicInEpoch(
	epochGet func(header string) alloraMath.Dec,
) (alloraMath.Dec, error) {
	reputerRewards := []alloraMath.Dec{
		epochGet("reputer_reward_0"),
		epochGet("reputer_reward_1"),
		epochGet("reputer_reward_2"),
		epochGet("reputer_reward_3"),
		epochGet("reputer_reward_4"),
	}
	// Reputer rewards
	totalReputersReward := alloraMath.ZeroDec()
	for _, reward := range reputerRewards {
		totalReputersReward, _ = totalReputersReward.Add(reward)
	}
	return totalReputersReward, nil
}

func GetTotalRewardForTopicInEpoch(
	epochGet func(header string) alloraMath.Dec,
) (alloraMath.Dec, error) {
	totalRewardForTopic := alloraMath.ZeroDec()
	totalInferersReward, err := GetTotalInfererRewardForTopicInEpoch(epochGet)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalForecastersReward, err := GetTotalForecasterRewardForTopicInEpoch(epochGet)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalReputersReward, err := GetTotalReputerRewardForTopicInEpoch(epochGet)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalRewardForTopic, err = totalRewardForTopic.Add(totalInferersReward)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalRewardForTopic, err = totalRewardForTopic.Add(totalForecastersReward)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}
	totalRewardForTopic, err = totalRewardForTopic.Add(totalReputersReward)
	if err != nil {
		return alloraMath.ZeroDec(), err
	}

	return totalRewardForTopic, nil
}

func SetRegretsFromPreviousEpoch(
	ctx sdk.Context,
	k keeper.Keeper,
	topicId uint64,
	blockHeight int64,
	inferers []string,
	forecasters []string,
	epochPrevGet func(header string) alloraMath.Dec,
) error {
	// Set inferer network regrets
	infererNetworkRegrets := map[string]inferencesynthesis.Regret{}
	for i, inferer := range inferers {
		infererNetworkRegrets[inferer] = epochPrevGet(fmt.Sprintf("inference_regret_worker_%v", i))
	}

	for inferer, regret := range infererNetworkRegrets {
		k.SetInfererNetworkRegret(
			ctx,
			topicId,
			inferer,
			emissionstypes.TimestampedValue{BlockHeight: blockHeight, Value: regret},
		)
	}

	// Set forecaster network regrets
	forecasterNetworkRegrets := map[string]inferencesynthesis.Regret{}
	for i, forecaster := range forecasters {
		forecasterNetworkRegrets[forecaster] = epochPrevGet(fmt.Sprintf("inference_regret_worker_%v", i+5))
	}

	for forecaster, regret := range forecasterNetworkRegrets {
		k.SetForecasterNetworkRegret(
			ctx,
			topicId,
			forecaster,
			emissionstypes.TimestampedValue{BlockHeight: blockHeight, Value: regret},
		)
	}

	// Set naive inferer network regrets
	infererNaiveNetworkRegrets := map[string]inferencesynthesis.Regret{}
	for i, inferer := range inferers {
		infererNaiveNetworkRegrets[inferer] = epochPrevGet(fmt.Sprintf("naive_inference_regret_worker_%v", i))
	}

	for inferer, regret := range infererNaiveNetworkRegrets {
		k.SetNaiveInfererNetworkRegret(
			ctx,
			topicId,
			inferer,
			emissionstypes.TimestampedValue{BlockHeight: blockHeight, Value: regret},
		)
	}

	// Set one-out inferer-inferer network regrets
	for i := range inferers {
		for j := range inferers {
			headerName := fmt.Sprintf("inference_regret_worker_%v_oneout_%v", i, j)
			k.SetOneOutInfererInfererNetworkRegret(
				ctx,
				topicId,
				inferers[j],
				inferers[i],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	// Set one-out inferer-forecaster network regrets
	for i := range inferers {
		for j := range forecasters {
			headerName := fmt.Sprintf("inference_regret_worker_%v_oneout_%v", j+5, i)
			k.SetOneOutInfererForecasterNetworkRegret(
				ctx,
				topicId,
				inferers[i],
				forecasters[j],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	// Set one-out forecaster-inferer network regrets
	for i := range inferers {
		for j := range forecasters {
			headerName := fmt.Sprintf("inference_regret_worker_%v_oneout_%v", i, j+5)
			k.SetOneOutForecasterInfererNetworkRegret(
				ctx,
				topicId,
				forecasters[j],
				inferers[i],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	// Set one-out forecaster-forecaster network regrets
	for i := range forecasters {
		for j := range forecasters {
			headerName := fmt.Sprintf("inference_regret_worker_%v_oneout_%v", i+5, j+5)
			k.SetOneOutForecasterForecasterNetworkRegret(
				ctx,
				topicId,
				forecasters[j],
				forecasters[i],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	// Set one-in forecaster network regrets
	for i := range forecasters {
		headerName := fmt.Sprintf("inference_regret_worker_5_onein_%v", i)
		k.SetOneInForecasterNetworkRegret(
			ctx,
			topicId,
			forecasters[i],
			forecasters[i],
			emissionstypes.TimestampedValue{
				BlockHeight: blockHeight,
				Value:       epochPrevGet(headerName),
			},
		)
		for j := range inferers {
			headerName := fmt.Sprintf("inference_regret_worker_%v_onein_%v", j, i)
			k.SetOneInForecasterNetworkRegret(
				ctx,
				topicId,
				forecasters[i],
				inferers[j],
				emissionstypes.TimestampedValue{
					BlockHeight: blockHeight,
					Value:       epochPrevGet(headerName),
				},
			)
		}
	}

	return nil
}
