package testdata

import (
	"encoding/csv"
	"fmt"
	"strings"

	alloraMath "github.com/allora-network/allora-chain/math"
	emissionstypes "github.com/allora-network/allora-chain/x/emissions/types"
)

const simulatorHeaders = "target,inference_0,inference_1,inference_2,inference_3,inference_4,forecasted_loss_0_for_0,forecasted_loss_0_for_1,forecasted_loss_0_for_2,forecasted_loss_0_for_3,forecasted_loss_0_for_4,forecasted_loss_1_for_0,forecasted_loss_1_for_1,forecasted_loss_1_for_2,forecasted_loss_1_for_3,forecasted_loss_1_for_4,forecasted_loss_2_for_0,forecasted_loss_2_for_1,forecasted_loss_2_for_2,forecasted_loss_2_for_3,forecasted_loss_2_for_4,forecast_implied_inference_0,forecast_implied_inference_1,forecast_implied_inference_2,forecast_implied_inference_0_oneout_0,forecast_implied_inference_0_oneout_1,forecast_implied_inference_0_oneout_2,forecast_implied_inference_0_oneout_3,forecast_implied_inference_0_oneout_4,forecast_implied_inference_1_oneout_0,forecast_implied_inference_1_oneout_1,forecast_implied_inference_1_oneout_2,forecast_implied_inference_1_oneout_3,forecast_implied_inference_1_oneout_4,forecast_implied_inference_2_oneout_0,forecast_implied_inference_2_oneout_1,forecast_implied_inference_2_oneout_2,forecast_implied_inference_2_oneout_3,forecast_implied_inference_2_oneout_4,network_inference,network_inference_errorbar_0,network_inference_errorbar_1,network_inference_errorbar_2,network_inference_errorbar_3,network_inference_errorbar_4,network_naive_inference,network_inference_oneout_0,network_inference_oneout_1,network_inference_oneout_2,network_inference_oneout_3,network_inference_oneout_4,network_inference_oneout_5,network_inference_oneout_6,network_inference_oneout_7,network_naive_inference_onein_0,network_naive_inference_onein_1,network_naive_inference_onein_2,network_loss,reputer_stake_0,reputer_stake_1,reputer_stake_2,reputer_stake_3,reputer_stake_4,reputer_0_loss_inference_0,reputer_0_loss_inference_1,reputer_0_loss_inference_2,reputer_0_loss_inference_3,reputer_0_loss_inference_4,reputer_1_loss_inference_0,reputer_1_loss_inference_1,reputer_1_loss_inference_2,reputer_1_loss_inference_3,reputer_1_loss_inference_4,reputer_2_loss_inference_0,reputer_2_loss_inference_1,reputer_2_loss_inference_2,reputer_2_loss_inference_3,reputer_2_loss_inference_4,reputer_3_loss_inference_0,reputer_3_loss_inference_1,reputer_3_loss_inference_2,reputer_3_loss_inference_3,reputer_3_loss_inference_4,reputer_4_loss_inference_0,reputer_4_loss_inference_1,reputer_4_loss_inference_2,reputer_4_loss_inference_3,reputer_4_loss_inference_4,reputer_0_loss_forecast_implied_inference_0,reputer_0_loss_forecast_implied_inference_1,reputer_0_loss_forecast_implied_inference_2,reputer_1_loss_forecast_implied_inference_0,reputer_1_loss_forecast_implied_inference_1,reputer_1_loss_forecast_implied_inference_2,reputer_2_loss_forecast_implied_inference_0,reputer_2_loss_forecast_implied_inference_1,reputer_2_loss_forecast_implied_inference_2,reputer_3_loss_forecast_implied_inference_0,reputer_3_loss_forecast_implied_inference_1,reputer_3_loss_forecast_implied_inference_2,reputer_4_loss_forecast_implied_inference_0,reputer_4_loss_forecast_implied_inference_1,reputer_4_loss_forecast_implied_inference_2,inference_loss_0,inference_loss_1,inference_loss_2,inference_loss_3,inference_loss_4,forecast_implied_inference_loss_0,forecast_implied_inference_loss_1,forecast_implied_inference_loss_2,inference_regret_worker_0,inference_regret_worker_1,inference_regret_worker_2,inference_regret_worker_3,inference_regret_worker_4,inference_regret_worker_5,inference_regret_worker_6,inference_regret_worker_7,inference_regret_worker_0_onein_0,inference_regret_worker_1_onein_0,inference_regret_worker_2_onein_0,inference_regret_worker_3_onein_0,inference_regret_worker_4_onein_0,inference_regret_worker_5_onein_0,inference_regret_worker_0_onein_1,inference_regret_worker_1_onein_1,inference_regret_worker_2_onein_1,inference_regret_worker_3_onein_1,inference_regret_worker_4_onein_1,inference_regret_worker_5_onein_1,inference_regret_worker_0_onein_2,inference_regret_worker_1_onein_2,inference_regret_worker_2_onein_2,inference_regret_worker_3_onein_2,inference_regret_worker_4_onein_2,inference_regret_worker_5_onein_2,reputer_0_loss_network_inference,reputer_1_loss_network_inference,reputer_2_loss_network_inference,reputer_3_loss_network_inference,reputer_4_loss_network_inference,network_loss_reputers,reputer_0_loss_naive_network_inference,reputer_1_loss_naive_network_inference,reputer_2_loss_naive_network_inference,reputer_3_loss_naive_network_inference,reputer_4_loss_naive_network_inference,network_naive_loss_reputers,reputer_0_loss_network_inference_oneout_0,reputer_0_loss_network_inference_oneout_1,reputer_0_loss_network_inference_oneout_2,reputer_0_loss_network_inference_oneout_3,reputer_0_loss_network_inference_oneout_4,reputer_0_loss_network_inference_oneout_5,reputer_0_loss_network_inference_oneout_6,reputer_0_loss_network_inference_oneout_7,reputer_1_loss_network_inference_oneout_0,reputer_1_loss_network_inference_oneout_1,reputer_1_loss_network_inference_oneout_2,reputer_1_loss_network_inference_oneout_3,reputer_1_loss_network_inference_oneout_4,reputer_1_loss_network_inference_oneout_5,reputer_1_loss_network_inference_oneout_6,reputer_1_loss_network_inference_oneout_7,reputer_2_loss_network_inference_oneout_0,reputer_2_loss_network_inference_oneout_1,reputer_2_loss_network_inference_oneout_2,reputer_2_loss_network_inference_oneout_3,reputer_2_loss_network_inference_oneout_4,reputer_2_loss_network_inference_oneout_5,reputer_2_loss_network_inference_oneout_6,reputer_2_loss_network_inference_oneout_7,reputer_3_loss_network_inference_oneout_0,reputer_3_loss_network_inference_oneout_1,reputer_3_loss_network_inference_oneout_2,reputer_3_loss_network_inference_oneout_3,reputer_3_loss_network_inference_oneout_4,reputer_3_loss_network_inference_oneout_5,reputer_3_loss_network_inference_oneout_6,reputer_3_loss_network_inference_oneout_7,reputer_4_loss_network_inference_oneout_0,reputer_4_loss_network_inference_oneout_1,reputer_4_loss_network_inference_oneout_2,reputer_4_loss_network_inference_oneout_3,reputer_4_loss_network_inference_oneout_4,reputer_4_loss_network_inference_oneout_5,reputer_4_loss_network_inference_oneout_6,reputer_4_loss_network_inference_oneout_7,network_loss_reputers_oneout_0,network_loss_reputers_oneout_1,network_loss_reputers_oneout_2,network_loss_reputers_oneout_3,network_loss_reputers_oneout_4,network_loss_reputers_oneout_5,network_loss_reputers_oneout_6,network_loss_reputers_oneout_7,reputer_0_loss_naive_network_inference_onein_0,reputer_0_loss_naive_network_inference_onein_1,reputer_0_loss_naive_network_inference_onein_2,reputer_1_loss_naive_network_inference_onein_0,reputer_1_loss_naive_network_inference_onein_1,reputer_1_loss_naive_network_inference_onein_2,reputer_2_loss_naive_network_inference_onein_0,reputer_2_loss_naive_network_inference_onein_1,reputer_2_loss_naive_network_inference_onein_2,reputer_3_loss_naive_network_inference_onein_0,reputer_3_loss_naive_network_inference_onein_1,reputer_3_loss_naive_network_inference_onein_2,reputer_4_loss_naive_network_inference_onein_0,reputer_4_loss_naive_network_inference_onein_1,reputer_4_loss_naive_network_inference_onein_2,network_naive_loss_reputers_onein_0,network_naive_loss_reputers_onein_1,network_naive_loss_reputers_onein_2,inferer_score_0,inferer_score_1,inferer_score_2,inferer_score_3,inferer_score_4,forecaster_score_0,forecaster_score_1,forecaster_score_2,inferer_reward_fraction_0,inferer_reward_fraction_1,inferer_reward_fraction_2,inferer_reward_fraction_3,inferer_reward_fraction_4,forecaster_reward_fraction_0,forecaster_reward_fraction_1,forecaster_reward_fraction_2,reputer_listening_coefficient_0,reputer_listening_coefficient_1,reputer_listening_coefficient_2,reputer_listening_coefficient_3,reputer_listening_coefficient_4,reputer_adjusted_stake_0,reputer_adjusted_stake_1,reputer_adjusted_stake_2,reputer_adjusted_stake_3,reputer_adjusted_stake_4,reputer_score_0,reputer_score_1,reputer_score_2,reputer_score_3,reputer_score_4,reputer_reward_fraction_0,reputer_reward_fraction_1,reputer_reward_fraction_2,reputer_reward_fraction_3,reputer_reward_fraction_4,inferer_reward_fraction_smooth_0,inferer_reward_fraction_smooth_1,inferer_reward_fraction_smooth_2,inferer_reward_fraction_smooth_3,inferer_reward_fraction_smooth_4,forecaster_reward_fraction_smooth_0,forecaster_reward_fraction_smooth_1,forecaster_reward_fraction_smooth_2,reputer_reward_fraction_smooth_0,reputer_reward_fraction_smooth_1,reputer_reward_fraction_smooth_2,reputer_reward_fraction_smooth_3,reputer_reward_fraction_smooth_4,inferers_entropy,forecasters_entropy,reputers_entropy,forecaster_task_score,forecasters_utility,inferers_reward_fraction,forecasters_reward_fraction,reputers_reward_fraction,topic_rewards,inferer_reward_0,inferer_reward_1,inferer_reward_2,inferer_reward_3,inferer_reward_4,forecaster_reward_0,forecaster_reward_1,forecaster_reward_2,reputer_reward_0,reputer_reward_1,reputer_reward_2,reputer_reward_3,reputer_reward_4"

func GetSimulatedValuesGetterForEpoch(
	epoch string,
	headers string,
) func(header string) alloraMath.Dec {
	r := csv.NewReader(strings.NewReader(headers + "\n" + epoch + "\n"))
	headersRead, err := r.Read()
	if err != nil {
		panic(err)
	}
	valuesRead, err := r.Read()
	if err != nil {
		panic(err)
	}
	simulatedValuesDec := make(map[string]alloraMath.Dec)
	if len(headersRead) != len(valuesRead) {
		panic("Header and values length mismatch")
	}
	for i := 0; i < len(headersRead); i++ {
		simulatedValuesDec[headersRead[i]] = alloraMath.MustNewDecFromString(valuesRead[i])
	}

	return func(header string) alloraMath.Dec {
		value, exists := simulatedValuesDec[header]
		if !exists {
			panic(fmt.Sprintf("Header '%s' not found in simulated values map", header))
		}
		return value
	}
}

func GetSimulatedValuesGetterForEpochs() map[int]func(header string) alloraMath.Dec {
	simulatorEpochs := map[int]string{
		300: "0.03985254043403228,0.07577436106974424,0.07639162505082055,-0.034313320472160715,0.052323082290933166,0.2817827071933644,-2.937042328602671,-2.6652596469290026,-2.209050456960448,-2.9970067071912223,-1.6430667599805893,-2.5854172364671206,-2.945213848270535,-2.8306341338851135,-3.5886614871971223,-1.4280247641266457,-2.5660792126557284,-2.249565185541936,-2.164869291255009,-2.7553941616690865,-1.5260646394992616,0.0626645627164341,0.05087154501790056,0.05659680705984837,0.05466831143615106,0.06144425738865351,0.06348975826326704,0.07478696636955351,0.06124157187638549,0.04985348960247363,0.04836582747019586,0.054796840263623976,0.04015578338729861,0.052262897253606874,0.05158356803054123,0.056172718756516284,0.058456746354529195,0.07151831601207018,0.054465482424998705,0.05651879764535164,-0.025370343159616667,0.03199191343752755,0.05639729680680978,0.06535818282420389,0.07444091992044453,-0.00796982028334002,0.0519170057478878,0.0548903471497086,0.0591427130579552,0.059926188501626676,0.05604805812761144,0.052551596707715316,0.0604415625026824,0.05651423887209555,0.062437235555055884,0.05072215576135726,0.05631942671405893,-4.184212196388404,325307.6699040168,533334.1728949735,274479.73932263744,209822.66165519747,436347.2231567909,-2.5912625478638502,-2.6757609680175105,-2.778009518881881,-2.1569629339700835,-2.1916867849056985,-2.6556964158892304,-2.759410776859517,-2.8541149563589387,-2.2230927643006835,-2.2720747527907093,-2.723587402013625,-2.7957246371400513,-2.9172898010670227,-2.195393963811428,-2.3019097833197812,-2.788609156382091,-2.8988629901722636,-2.8841908515099792,-2.026251551917865,-2.2277867637543847,-2.660874900171979,-2.768831880967309,-2.8759456315561382,-2.2290907496673364,-2.2661015029301885,-4.023909678507439,-4.007705113380171,-3.8591583582774436,-4.086035401293891,-4.074654423125475,-3.9216261605369276,-4.081651693091119,-4.0784112722595784,-3.912380881015448,-4.034687900005479,-3.961063542534533,-3.84753028925171,-4.107391629259928,-4.088594106783596,-3.931772621367048,-2.6713327472242674,-2.7684742731941436,-2.8588465539668526,-2.184987796868335,-2.2552923726116103,-4.073182896659261,-4.053016965548208,-3.9025295084907796,-1.560011473048149,-1.4904135801306584,-1.3533422316910544,-1.9908424667855402,-1.926077127346679,-0.14370284194782443,-0.14002228764788768,-0.31542066045078626,-1.4106550890586194,-1.3410571961411286,-1.2039858477015248,-1.8414860827960104,-1.7767207433571495,0.005653542041705205,-1.444857771755098,-1.375259878837608,-1.2381885303980034,-1.875688765492489,-1.8109234260536284,-0.024868586354837137,-1.2386045962997108,-1.1690067033822202,-1.031935354942616,-1.6694355900371023,-1.604670250598241,0.005986216297651633,-4.141012807672392,-4.202857570040649,-4.207229851203323,-4.071942967357342,-4.233135679752779,-4.184212196388404,-2.7948404089715027,-2.855810082357206,-2.91562318058967,-2.910664109642561,-2.8834094740089786,-2.867127012448094,-3.8970095011262655,-3.881835890769383,-3.85444330692562,-4.040059087982687,-3.9683457705630287,-4.053264582024242,-4.0924654001535705,-4.140592367039661,-3.9490769191261648,-3.9502917792691337,-3.9224144908247602,-4.103825719288546,-4.044399041564426,-4.121255443681513,-4.160562455300641,-4.196950796344603,-3.919465123987367,-3.92450749356362,-3.9647204343016664,-4.171788118816151,-4.0586066208129035,-4.132089829576988,-4.134984814541698,-4.20519500153155,-3.7736569173659067,-3.826419597559401,-4.059544431695295,-4.144232576701475,-4.0354698089236996,-4.054087135001883,-4.019269894088322,-4.091344273963577,-3.9749854156554245,-3.9767186140017543,-3.9506553615280566,-4.129613333443389,-4.042352772955112,-4.121647971207618,-4.18725477376286,-4.226188627500067,-3.920656752819532,-3.925671639549924,-3.9396103084567136,-4.113740427466487,-4.031131142991899,-4.1026714820379615,-4.134050609654824,-4.182635122000239,-4.01699231557376,-4.021993929100624,-3.847880910497993,-4.08076298123898,-4.082609617650555,-3.9052966811850807,-4.085753861716322,-4.091183865796843,-3.900090848294796,-4.007556868706913,-3.9827856887690345,-3.8348824037420557,-4.095206762167389,-4.121272843674936,-3.9321032454389924,-4.064783031189941,-4.070559864956888,-3.89226664765738,0.2635554435688716,0.25854055683847976,0.24460188793169024,0.07047176892191676,0.15308105339650524,0.36056954044829337,0.33847940317738345,0.2574677145934453,0.29169097985455383,0.2841437245876377,0.26318333029699287,0.032815764628557814,0.12816620063225762,0.38425799101832747,0.3573008837419562,0.25844112523971646,0.8617974332278446,0.7892716027227178,0.966645828689954,0.0,0.82358605210786,1.0,1.0,1.0,0.0,1.0,38.69171714590731,75.86270703290329,52.57006911905719,27.09664730768514,56.10499906050706,0.12890534971375645,0.41436816447763586,0.14777721407469965,0.05822729093075017,0.25072198080315794,0.24762742871895138,0.23546058191719357,0.33057186595731297,0.04615996961727812,0.14018015378923515,0.37786581653263535,0.36207387052149254,0.26006031294585186,0.12890534971375645,0.41436816447763586,0.14777721407469965,0.05822729093075017,0.25072198080315794,1.3928071997241573,1.079278784160229,1.3120706244780145,1.3170851839403097,0.5,0.3680627796022683,0.28520986202716603,0.3467273583705657,7693.647532318099,825.9945600960946,804.6226554961039,745.2681575607382,92.92588712238651,362.9340357498089,843.1789048148696,784.026812414575,567.0984339486467,343.8676640574801,1105.3677220931074,394.2102132892799,155.32700978829595,668.8254758867129",
		301: "0.2011215847521158,0.3874244253017061,0.31436237403060463,0.2409483079646476,0.11187005148737925,0.1531817429589984,-1.1722562544477757,-1.9763021181600087,-2.6508659878031016,-2.0077510744409355,-2.399956155281731,-1.702563520360262,-2.1211438291541356,-2.464498040509596,-2.0306504622954304,-2.2456626543066114,-1.0704115995156724,-1.7269956855328745,-2.5126042345540456,-1.3202944666617864,-2.079969798110036,0.2238673208766073,0.2350157550047112,0.23480141211083919,0.2347085637404865,0.21961248284914847,0.15923100678084467,0.2245177798363059,0.23924246396380958,0.23914983931025266,0.23142499623712837,0.17423856121617673,0.23488287708792205,0.24159149657806367,0.2366583066615537,0.2320878690028414,0.16350914914752418,0.2346921916992705,0.24184916043336618,0.2309237374396228,0.16124068707965292,0.2101649975371919,0.2348055011814875,0.23639907382318,0.240419017226173,0.26449413197125715,0.23700078375546954,0.22720167403394162,0.1668736468402734,0.23102677820229386,0.2409824730112955,0.23531061126984454,0.2278850578370365,0.22988293957880723,0.22423219830803343,0.23530454252544775,0.23517779758672774,-4.171870778157974,325651.53756807424,534439.5406170667,274873.94953592675,209977.98866498578,437016.0486326776,-2.593342334340825,-2.677479926578074,-2.7710651184678206,-2.178575108503446,-2.1750658639123683,-2.6594143051667123,-2.7601517689441706,-2.8455007747270407,-2.244343190565455,-2.257844741779959,-2.7318517899676737,-2.8020670116652355,-2.901314095616099,-2.233182963045464,-2.2739970852082156,-2.8027408639848654,-2.8917489585161733,-2.851198138899717,-2.1262867875978273,-2.1638348435772627,-2.6644373088662205,-2.7690292174586704,-2.8671827505063723,-2.249822724363687,-2.252654359691984,-4.01328567023277,-4.006104309983584,-3.852773238714871,-4.073087404245582,-4.0728309111895395,-3.9167666282089337,-4.060708154008947,-4.0758554585696585,-3.906106403342913,-3.9822466187003034,-3.966542993641803,-3.849125898804831,-4.094606627022818,-4.086382941052764,-3.9253354964547453,-2.6766342823403737,-2.7691931081649805,-2.8464958786690455,-2.218035215473246,-2.2328579163766102,-4.054822349562749,-4.051902304953923,-3.8975585016942507,-1.553533975325094,-1.4816399891168919,-1.3505454984708418,-1.9871417763754589,-1.9273707007901475,-0.14103740061256445,-0.13801690620350404,-0.3113098220520799,-1.4068383424956685,-1.334944356287466,-1.203849865641416,-1.840446143546033,-1.780675067960722,0.005658232216861214,-1.4393502090449528,-1.367456222836751,-1.2363617321907003,-1.8729580100953174,-1.8131869345100065,-0.023833139923362976,-1.2356288593507359,-1.1637348731425337,-1.0326403824964834,-1.6692366604011009,-1.6094655848157893,0.006595293922278107,-4.1309500254244105,-4.195277834316566,-4.193284673296265,-4.0415878606349995,-4.222868156452277,-4.171870778157974,-2.792111972233532,-2.8532135633349016,-2.9132843633379015,-2.890767167145981,-2.878466684524885,-2.8619317885158417,-3.8943439783638825,-3.8781380226096274,-3.847310157192445,-4.030291416661952,-3.961987365692675,-4.049191773154162,-4.081349333544736,-4.13215295885068,-3.9466591223636063,-3.9461089377911436,-3.9165794521595085,-4.092674176561113,-4.036194260099792,-4.116133530851216,-4.149058197700787,-4.188893528281201,-3.917604994262455,-3.923311150558089,-3.952615027797915,-4.148035353730526,-4.052926119940794,-4.123391133363039,-4.12401057553474,-4.1827561277725485,-3.7846374871551403,-3.8032326892442003,-4.013265428744291,-4.097761032876534,-4.014078394929453,-4.044273123965019,-3.991910309613469,-4.071717877554445,-3.9719494935294164,-3.970826328525577,-3.9433438216149175,-4.121609046355714,-4.03608359627353,-4.116458754898832,-4.177774843010665,-4.2166341785802945,-3.9197272977380293,-3.9193965835865803,-3.927436028410869,-4.097508986873436,-4.022580791589431,-4.096631547493923,-4.1213457781955904,-4.170573318846539,-4.00560999019866,-4.018432215913468,-3.843367571063157,-4.06883304513364,-4.080732321929603,-3.8999337223267,-4.065864984762811,-4.082540211246169,-3.8923520964419103,-3.9680722236770483,-3.9781946499994993,-3.8231250226563627,-4.085852188259093,-4.116912913117186,-3.924829214397803,-4.049121905769484,-4.066416426994018,-3.8854815091503343,0.2521434804199445,0.25247419457139353,0.24443474974710488,0.07436179128453801,0.14928998656854287,0.3532269523114483,0.3390149095913316,0.25686052464219955,0.2823475005892476,0.2828552985648986,0.27051524884233197,0.03710364091968176,0.12717831108384003,0.37854830726466643,0.36111454521292335,0.2603371475224103,0.8617974332278446,0.7891156561066639,0.966645828689954,0.0,0.82358605210786,1.0,1.0,1.0,0.0,1.0,38.98736106758013,75.57236974030711,54.008645554820795,27.49582372198557,55.81167613141232,0.1294287628280028,0.411732784563998,0.1513389426620298,0.05885648650896329,0.248643023437006,0.251099435905981,0.24020005358196408,0.32456620424581484,0.045254336747518484,0.13887996951869566,0.3779340656058384,0.3619779379906356,0.2600879964035077,0.12942876282800284,0.41173278456399803,0.15133894266202982,0.058856486508963295,0.24864302343700606,1.3929550562167405,1.0792877218910457,1.313035490376442,1.309938989642132,0.5,0.36799277554158083,0.2851277093356822,0.3468795151227368,7637.527499760037,793.5531633999154,794.9803575103819,760.2979697668443,104.28182138683782,357.4416308478671,824.3535652124298,786.3885720355576,566.9285837468723,342.89585897245314,1090.8044220264037,400.94253863061743,155.92859776007322,658.7304184637827",
		302: "0.09568583574498818,0.31518294214370407,0.031930713226498306,-0.06175655892487519,0.027030363848847216,0.06462881309405605,-1.6963930285316557,-2.3292834188694402,-1.3909342207727045,-2.1283562567452243,-2.6127746220329433,-1.8250972056781052,-2.5966055525196294,-1.051295269955843,-2.1836931298233173,-2.7787078872966005,-1.188215003347019,-2.774381909009714,-1.3439605329290714,-2.48444239793305,-1.9310546096612462,0.05971222259624888,0.055700826611976326,0.03145856991162677,0.058921638274707915,0.06363872956258017,0.06169979171827255,0.06041781914494188,0.032576623226973835,0.05315009259968499,0.06507206342046645,0.05823358300262275,0.057235714601167755,0.03594819651730713,0.03133913711632787,0.028575774003285672,0.031506714413164445,0.03256288231487948,0.03092191591577964,0.05227649175931305,0.027873966124283066,0.03170337160539059,0.056640584851396655,0.06069390493050175,0.06409771131913189,-0.014638825927532037,0.05036000426218982,0.05682111592222083,0.05438892947708341,0.05352318707641681,0.03366610020705471,0.04773542553791877,0.05033949902603916,0.05760709092522283,0.05957942924790154,0.05559614841312231,0.031478351817687315,-4.147967793273115,325994.4334270467,535530.345039093,275274.89207455737,210133.91726274585,437674.77905114135,-2.575691183622602,-2.665810220333263,-2.7705429169973352,-2.177002199938923,-2.1778652635123383,-2.6414607298184807,-2.748989241823414,-2.8437667122080397,-2.242767292016085,-2.2639050442205604,-2.6991324025369567,-2.783901992346555,-2.9004266934133236,-2.2288328841506044,-2.282918938312728,-2.731388573522038,-2.826271646195945,-2.848511375417484,-2.136383395129137,-2.191400981708325,-2.648134962484946,-2.758184288040933,-2.8649159931277706,-2.2465058105020073,-2.259047855165137,-4.002253549944516,-3.9899298504179947,-3.8420229431225694,-4.063509513044786,-4.056132882191248,-3.9040415170226783,-4.03965950570465,-4.047112985814073,-3.8862665233309706,-3.939656636556917,-3.9229236440180153,-3.7873024460964255,-4.084601234040981,-4.07009315607358,-3.9107291726884896,-2.6505681010559905,-2.7505351271211222,-2.8448762229190967,-2.2169949953370356,-2.2413926126495727,-4.039230355914285,-4.030386902885553,-3.8778651635696195,-1.5479205470142972,-1.473219256820402,-1.3458001056591595,-1.981524878531521,-1.925291148773487,-0.13780740428719107,-0.13597330462190985,-0.3071891028172215,-1.4043299603114492,-1.329628670117554,-1.2022095189563116,-1.837934291828673,-1.7817005620706392,0.005783182415656876,-1.4348521325913381,-1.3601508423974433,-1.2327316912362003,-1.8684564641085617,-1.8122227343505282,-0.022904890198950978,-1.2336061767991797,-1.1589048866052847,-1.0314857354440419,-1.6672105083164037,-1.6109767785583697,0.007125267397895767,-4.114226864481105,-4.179589916239138,-4.160761854324064,-3.981192294244332,-4.206431417192309,-4.147967793273115,-2.785946034480458,-2.8469105630405607,-2.9043846482045663,-2.8585976003673097,-2.872143332015489,-2.852203973818845,-3.8793202943011904,-3.8673831466027226,-3.8329160990133335,-4.016175640578057,-3.9441522772032167,-4.032040788083016,-4.068311888601013,-4.117986055545926,-3.9340586880123904,-3.9331143761602148,-3.90441905247231,-4.077998245159286,-4.021643932912992,-4.102372265420697,-4.134583519573473,-4.173589494785073,-3.89568637674389,-3.9056615205132137,-3.9310237265948738,-4.125624898251556,-4.02722439677489,-4.096776429314211,-4.104760095393049,-4.153567181302432,-3.751088547075347,-3.752703495314347,-3.941801765130104,-4.0360201196182075,-3.945494230987545,-3.972385177506755,-3.941891436462077,-4.0072184217931905,-3.9580140631697547,-3.9597933676405046,-3.9314013846950973,-4.1056390286324005,-4.017689387054972,-4.102183903594685,-4.163759739149103,-4.199780896016911,-3.902471413480465,-3.9021726741898997,-3.906480511001509,-4.075887553876284,-3.9984129945571256,-4.073309754313012,-4.102343802151031,-4.147177570314911,-3.9964510545572045,-4.002662871943208,-3.8285861723109162,-4.056318058539756,-4.06371132233959,-3.8858618889716143,-4.047744335619809,-4.058163356380529,-3.871390596869295,-3.920718793627102,-3.92700159835867,-3.769789218386939,-4.073563713161378,-4.101758251805218,-3.912244406128149,-4.032322621709467,-4.044937545564796,-3.865970134891165,0.24549637979265038,0.2457951190832155,0.24148728227160632,0.07208023939683095,0.14955479871598953,0.35102319119273273,0.3324013862780507,0.2540342074867331,0.2792916935666893,0.2797592105994787,0.2730188418850983,0.03632864955047722,0.13160160439825658,0.38112719780115617,0.35803218692671684,0.26084061527212693,0.8617974332278446,0.7888950972267375,0.966645828689954,0.0,0.8235328306844694,1.0,1.0,1.0,0.0,1.0,39.62343385140668,72.82121802178965,56.20133269154021,24.57771178917712,54.25088041600096,0.13414055274383638,0.40498582334574196,0.16066120230159636,0.053633408909161136,0.24657901269966423,0.25391866167205185,0.24415596928371555,0.3194114680097432,0.04436176802781436,0.13815213300665175,0.3782533788253702,0.3615833628842437,0.2601632582903696,0.13414055274383638,0.40498582334574196,0.16066120230159636,0.053633408909161136,0.24657901269966423,1.3927899459646582,1.0793022594071635,1.3143796486055754,1.2957638194542702,0.5,0.36783317021137757,0.28504166966761935,0.3471251601210031,7634.700758149912,784.3337971225326,785.6467234214296,766.7177716855499,102.02160788378703,369.5762833721912,829.4120002810495,779.1524562852544,567.643394949386,355.4988533230748,1073.2921019525766,425.78379187682617,142.13908454235485,653.4828914538997",
		303: "0.12868417444689542,0.15900824394413748,0.13427962468369312,0.13896935923290177,0.3081702276379509,0.31080925801357395,-3.072804810569508,-4.671861528454729,-4.052241155596669,-1.4320066647369591,-1.4781713476406007,-2.548410012775143,-4.483685165135059,-3.4340621663820396,-1.6384134979098979,-1.8876465358382037,-2.158085893934392,-3.9337797726273784,-3.8444606528179057,-1.4202936964536292,-1.2235670741104763,0.13624821743432403,0.1348774011674723,0.1367753371306983,0.13597206771200276,0.14073889406388695,0.13551481465603224,0.1358505239892255,0.13588474995895025,0.1350428100584571,0.13973584380680917,0.13478404736636504,0.1346738876703301,0.1347575050314416,0.13688449822377044,0.13938782313239967,0.13473170871243093,0.13659224675969123,0.1365551988859618,0.1359505601608808,0.1343452879697105,0.1347541343985062,0.135922081771474,0.1366851022453734,0.1385648221454873,0.13999610416083527,0.13593599537184986,0.14022295202317053,0.13525475623047972,0.13560136594138775,0.1356408045042023,0.13564447828052079,0.13655744998547287,0.13571044061588822,0.13634052016464102,0.13497724085375729,0.1368715388181609,-4.121059754387658,326349.93228036974,536603.6371410456,275700.6758664342,210276.0563472882,438328.26194259524,-2.5559566826468196,-2.6616042500661186,-2.7510376517482737,-2.1793186691823054,-2.188162341164971,-2.62287824158407,-2.7454094799765256,-2.8266288490314615,-2.2431352240350715,-2.275446337482596,-2.6676836178203627,-2.772653371526285,-2.875737386420873,-2.226273407879841,-2.298514634855358,-2.6301514577748986,-2.800149514912715,-2.7648742948582035,-2.1466833461070722,-2.245436139071145,-2.630050175092303,-2.752405113558721,-2.8504326395451485,-2.247077828808141,-2.269915387972125,-3.986050520991284,-3.9703528925221394,-3.8175821335091076,-4.047532018667295,-4.038763933317036,-3.883857315086636,-4.013113182849119,-4.013487593279357,-3.856927122175378,-3.8777771433064223,-3.856872338835027,-3.705187732690302,-4.069093879159925,-4.053249475906053,-3.8887969076102262,-2.6201847704503605,-2.742465435214472,-2.8189737981990692,-2.2185004516622113,-2.2581796815003417,-4.016312142069474,-4.004525648900022,-3.84779183083602,-1.5432159907065972,-1.4637567630556803,-1.3414286907121025,-1.9736283209509136,-1.9190500411848699,-0.1345014250902904,-0.13402938470848247,-0.30379698489066315,-1.4028298515502309,-1.323370623899314,-1.201042551555736,-1.833242181794547,-1.7786639020285038,0.005884714066076118,-1.4313585533545485,-1.351899325703632,-1.2295712533600536,-1.8617708835988647,-1.8071926038328212,-0.022171947356433814,-1.2318370996043326,-1.152377871953416,-1.0300497996098377,-1.6622494298486492,-1.6076711500826057,0.007581906211601257,-4.096058820857924,-4.157754904095038,-4.131921353621069,-3.916456230377292,-4.186072614689389,-4.121059754387658,-2.774161524880478,-2.8333548487636975,-2.886774020964985,-2.796653040106535,-2.8601293218462507,-2.833035063643177,-3.8622334532398646,-3.849779875184441,-3.815245008013798,-3.994386890525878,-3.921135599848293,-4.0118366355794235,-4.048750759985785,-4.099541961407977,-3.9155575728160197,-3.9172556356543797,-3.888570090731504,-4.057543643947238,-4.000689723020062,-4.08290814551185,-4.114213041065679,-4.155074379679826,-3.8676393414971906,-3.888836308511884,-3.9066543821232687,-4.101667140773414,-3.991243507055824,-4.058594582991481,-4.073503780746064,-4.12386518294506,-3.6986793971398484,-3.6968030386982025,-3.884987015549573,-3.9662215039252953,-3.8585909709592663,-3.8979306155372253,-3.874368278344705,-3.9410098131363362,-3.940452697648591,-3.945583466272629,-3.914611855234186,-4.086447705440314,-3.997205588987372,-4.082684339440644,-4.145156863970262,-4.180050511135581,-3.8790181131124046,-3.881561331091618,-3.8839359666403626,-4.049162250770851,-3.9671333190011966,-4.044362019327779,-4.075350594564745,-4.12106010363735,-3.9791139601536765,-3.9831374385688245,-3.8068295246320303,-4.038198959127669,-4.0474587519597325,-3.8658721512550063,-4.020444967450361,-4.0294812056740055,-3.8402372357106387,-3.871013109736494,-3.8656015214977315,-3.6809030646573087,-4.056596762954701,-4.082347491360538,-3.8932955982072333,-4.009513643149624,-4.020101110673801,-3.8361001753010693,0.2420416412752533,0.23949842329603976,0.23712378774729537,0.0718975036168068,0.15392643538646134,0.35164294617152103,0.3310483816248405,0.2507660159772038,0.27795288551058256,0.27394635893346014,0.2702062693393763,0.036951702219418014,0.1409427839971629,0.38364776970510694,0.3580564138864525,0.25829581640844057,0.8617974332278446,0.7888709130480445,0.966645828689954,0.0,0.8235328306844694,1.0,1.0,1.0,0.0,1.0,40.127869192354304,69.74176948451043,57.566421216961494,20.14910827109652,52.21928761468716,0.14003642281534076,0.4001823741307992,0.16971430273037086,0.045306137242485486,0.24476076308100367,0.25632208405590495,0.24713500824869,0.3144909481427065,0.04362076144697473,0.13843119810570287,0.3787928179133439,0.36123066798446457,0.2599765141021767,0.14003642281534076,0.4001823741307992,0.16971430273037086,0.045306137242485486,0.24476076308100367,1.3934247794082857,1.0791718842962335,1.31538271160657,1.2880246907444808,0.5,0.3678543733606919,0.28489381207562836,0.3472518145636798,7563.651234864075,773.3544798297339,762.207032048133,751.80089779543,102.81154087041573,392.1482347760355,826.6985754435566,771.5533639512214,556.5854941161822,367.80449046379636,1051.0756505388727,445.75319324226797,118.99618962224525,642.8620921661856",
		304: "-0.10601006107063919,-0.12469737867384255,-0.1705654335630118,-0.11090299724970418,-0.17968379060988082,-0.1476272692022198,-3.3827433824575897,-2.3519239802303424,-4.409202637562289,-2.1268117881426174,-2.4788882888286663,-3.947343826383229,-2.1711570075922966,-4.146468114872079,-2.5960974273993243,-2.098870928399926,-2.845749238635283,-1.8680415035845317,-4.436355435687086,-2.019984467676889,-2.0350401595079832,-0.11150319374033048,-0.11605170692446166,-0.11113516895339934,-0.11113763853501522,-0.11154669549838236,-0.1248892581816677,-0.11142516995319586,-0.11161721627037534,-0.11127828944927404,-0.11596491383403304,-0.12501694297432983,-0.11601663457964594,-0.11590219253237856,-0.11112218952985714,-0.11113635352722999,-0.12487046888597214,-0.11114933392308385,-0.11118607017393015,-0.11338365650391896,-0.12384370590314642,-0.11790569507526973,-0.11260099265879323,-0.11120037998816154,-0.11095026030686063,-0.12364262390065921,-0.11137100115882297,-0.11325401051986282,-0.12508838874364792,-0.11330879609599463,-0.11335629609463616,-0.11458001951105985,-0.11155803094071172,-0.11393808503327513,-0.11163821456384049,-0.11615588499380333,-0.11130422551164769,-4.12604610262747,326717.73677083355,537654.7127915845,276146.4290596764,210395.05253691043,438971.12403476145,-2.5605954342968853,-2.688231212704737,-2.765120604499603,-2.169381651948078,-2.175770280517971,-2.628810232908735,-2.7671632647187763,-2.8435536871399134,-2.2336330204887234,-2.263637614320271,-2.682531648809938,-2.8138895050651134,-2.9079906585738398,-2.207726855210163,-2.2831368962899083,-2.6584835056583795,-2.8996338691066486,-2.8334223670636267,-2.1161019022082477,-2.2059633393544567,-2.6356942255123417,-2.7756172342363197,-2.863947259649861,-2.2370131746727187,-2.258251063963336,-3.990309593945685,-3.976645623243955,-3.821538842031765,-4.048865327642901,-4.043032217841412,-3.8876793048901224,-4.018307581695677,-4.023011166037941,-3.863869425986238,-3.8960087495632,-3.891987514501028,-3.7471627815039783,-4.070322702761956,-4.055921072666664,-3.893219079969311,-2.6298231338731295,-2.7776091820359365,-2.8429889414562104,-2.2049216055735616,-2.242506602908451,-4.0207569813740704,-4.013231620897975,-3.856774272616728,-1.5385166885113715,-1.4522247788092657,-1.335591537758018,-1.968377938561213,-1.9154989870382848,-0.1315801947066013,-0.1319078944105837,-0.300344469402671,-1.4009751061267837,-1.314683196424678,-1.1980499553734303,-1.830836356176625,-1.7779574046536972,0.0059613876779866385,-1.4280122194227103,-1.3417203097206047,-1.2250870686693567,-1.8578734694725516,-1.8049945179496236,-0.021403425321922458,-1.2297749746135962,-1.1434830649114902,-1.0268498238602424,-1.659636224663438,-1.6067572731405098,0.008397244495104355,-4.098512681450374,-4.159705050357514,-4.137124585559664,-3.9417755766924882,-4.186663048036705,-4.12604610262747,-2.7899064559603532,-2.847377850614589,-2.9112038353773038,-2.8594157197538435,-2.8732154736390947,-2.8544861687032097,-3.8672812150294202,-3.8483760039804547,-3.8226038272781824,-3.9994834638182857,-3.9264296305316138,-4.0152280510907135,-4.047621448389726,-4.098998921496528,-3.920899955790131,-3.916192080331966,-3.893965915828166,-4.061091867199369,-4.004928165605187,-4.084150302452116,-4.113801157061081,-4.154932972993099,-3.8778705417470016,-3.8909165355142576,-3.919219108670376,-4.1075795581218255,-4.00129138641287,-4.0670998143139165,-4.076550664766329,-4.133066622442117,-3.7442665867442404,-3.699901272103604,-3.911084669684385,-3.991320828173096,-3.8775946289886023,-3.922401081663847,-3.8837020282140626,-3.967192294819359,-3.944995648177682,-3.9431215408223403,-3.918210536252894,-4.08837444275929,-4.001416047097858,-4.087069853104925,-4.145163492117752,-4.182093233974958,-3.889620803931553,-3.881093889717296,-3.8927941692772414,-4.055508063475409,-3.974209314759533,-4.050641898886863,-4.076618191762648,-4.12594222817436,-3.9830172768242997,-3.9869544118062157,-3.807515613464547,-4.038651051965001,-4.051046030586689,-3.8696795223678313,-4.024189289580156,-4.039389625776392,-3.8471691984671703,-3.8908843446133967,-3.8906273633354793,-3.7006871314808047,-4.05989579445305,-4.087850653125695,-3.8943237123561607,-4.014105531188889,-4.027718347909295,-3.8410389835700958,0.23642529869591655,0.24495221291017355,0.2332519333502283,0.07053803915206114,0.15183678786793653,0.34645799342687467,0.3303789779501375,0.2467161095565541,0.27176808201790026,0.2852403816411255,0.26675674462332943,0.0363499882512153,0.13988480346642942,0.38180158352910604,0.3616154841741504,0.25658293229674356,0.8617974332278446,0.7888683834649237,0.966645828689954,0.0,0.8235328306844694,1.0,1.0,1.0,0.0,1.0,39.75076784378681,71.03592181528835,54.862256127081324,21.71730706377388,53.33736510249758,0.13770422421188727,0.4049584880080973,0.16063571981253322,0.04844740545149113,0.24825416251599097,0.2578666838521045,0.2509455455879335,0.3097175277907688,0.04289368412739879,0.13857655864177554,0.37909369447492014,0.36126914960343315,0.2596371559216334,0.1377042242118873,0.40495848800809736,0.16063571981253325,0.048447405451491135,0.24825416251599103,1.393711843273157,1.078983623354396,1.3157490992784746,1.27155993392426,0.5,0.367884977337617,0.2848091359352783,0.3473058867271049,7527.745750839334,752.6194635810755,789.9289034547669,738.7413435541723,100.66564276303099,387.3892215978251,818.5714322912771,775.2930254585292,550.106305087207,360.0181117852141,1058.735787071701,419.9709113002984,126.66237024581307,649.0432326484244",
		305: "0.29159692486496175,0.3474390768609024,0.2870268542561354,0.28560052896888044,0.6530982221552022,0.16395193773988764,-2.5393246877386177,-4.352314368853635,-4.056867483615078,-0.789235830024656,-1.6710830185552636,-2.314963867637175,-4.835983932301614,-3.942943208366434,-1.4669287679720886,-1.937097551429882,-1.9788577739048057,-4.408143286595213,-2.9353210465483146,-0.8735941138878023,-2.0638769540182595,0.2872216941382743,0.2870297239106024,0.2868103143636582,0.28627483065043574,0.2869101595401424,0.2879810267343894,0.2868440831251293,0.2876339720093029,0.28681207786184126,0.2858940048252554,0.28732108023739933,0.2868606800673242,0.2872999546514885,0.2864627768724154,0.2834992831153773,0.28676307535937834,0.2869319316592228,0.2873616805640742,0.2871963214465604,0.28584254232975187,0.28691991471980854,0.28707475770810975,0.2993932525539459,0.3407894094539633,0.29081151198916505,0.28659655887731067,0.2859793724719101,0.28766107107811406,0.2869048022237446,0.28758584124056197,0.28709709969360486,0.28722452064687876,0.28727039704949087,0.28731921587607084,0.2871273344828885,0.2869244617785815,-4.129772041819874,327077.7548826188,538713.4485786563,276566.3999709767,210521.71490715625,439620.16726740985,-2.573606408567234,-2.6839857876306805,-2.791780613574149,-2.1702644162253915,-2.1829919643927287,-2.639265870415355,-2.759961814846217,-2.866173524259624,-2.2306675187952463,-2.2680538515843507,-2.6976547192106466,-2.8058696064293582,-2.943845390927454,-2.2081657875417857,-2.298340769734345,-2.7052385964640746,-2.8696808126975006,-2.9444997049699646,-2.1283432643045153,-2.2500051208984058,-2.645098198172843,-2.77038975602005,-2.891212011749491,-2.236920681161098,-2.2632924131222216,-3.9944947488216385,-3.974242741456005,-3.8294315492776803,-4.05405242198567,-4.040282794975426,-3.895834696907295,-4.033228590495068,-4.020357756176803,-3.8837417664978227,-3.9309215998187272,-3.8932200142141826,-3.800248648796891,-4.075267159765786,-4.054188719876198,-3.9029406206592534,-2.6454724801021046,-2.7686251640943165,-2.8799230112071768,-2.2056899968552726,-2.2539180699664083,-4.0307138114373915,-4.011296782494829,-3.8723688480236524,-1.5330949758320114,-1.4431169887008948,-1.327017287043486,-1.963948349201552,-1.9115344855198029,-0.1283279982741894,-0.13056463090202985,-0.29605034184202605,-1.3989590523997284,-1.308981065268612,-1.192881363611203,-1.8298124257692687,-1.7773985620875203,0.0058079251580937016,-1.4234304484655282,-1.333452461334412,-1.2173527596770026,-1.8542838218350688,-1.80186995815332,-0.020900103535546766,-1.2278641729116149,-1.1378861857804983,-1.0217864841230893,-1.6587175462811556,-1.6063036825994068,0.009180461078370523,-4.098875614990978,-4.159377951850984,-4.138019962123332,-3.9688747206235853,-4.188340133785717,-4.129772041819874,-2.797690264261579,-2.8585327820482833,-2.928371928208223,-2.885836462025246,-2.881376915952157,-2.8670157337776665,-3.874657157696959,-3.8538931433327943,-3.8157871209124004,-4.0007668577440025,-3.9285756937847074,-4.013571936329205,-4.054368006761809,-4.100101802188135,-3.929805611727491,-3.9231113118451373,-3.8873031004289635,-4.063875326228832,-4.010241940905648,-4.084403256834034,-4.117447573304475,-4.155357678924265,-3.893213417217703,-3.900810061957486,-3.910774742697237,-4.113856436833645,-4.009596866846798,-4.06356184765122,-4.091228543486618,-4.136005870282004,-3.793338460514291,-3.726829168979892,-3.8913549939788563,-4.003349848046364,-3.8962352461967678,-3.9348657913402874,-3.926846582960968,-3.972103139150127,-3.9521112655934796,-3.949801102986265,-3.911901926964914,-4.091050271088465,-4.00639723000312,-4.08595314673231,-4.1500347453853115,-4.181098884149327,-3.9035398929205773,-3.89053346013855,-3.884383899256566,-4.059627875069943,-3.980908199768505,-4.0510805674296515,-4.08749894825246,-4.127079994275475,-3.988231222395555,-3.9876817309496175,-3.815410106609998,-4.045605427062623,-4.049175095271458,-3.8799759479054354,-4.036812401623055,-4.039727224870951,-3.872801420293032,-3.9405682140798253,-3.9025620016658737,-3.74063011284877,-4.065354550236002,-4.08338200464522,-3.9020647333646084,-4.026287048958334,-4.027666989952994,-3.8561394376958864,0.22623214889929644,0.23923858168132384,0.245388142563308,0.07014416674993118,0.1488638420513686,0.34883643458783364,0.32186763421939246,0.2492999616378544,0.2582872880130892,0.27884430144710637,0.2885708050889272,0.03664818326182943,0.1376494221890478,0.38637896350271156,0.35245358677277255,0.2611674497245158,0.8617974332278446,0.7888337330855912,0.966645828689954,0.0,0.8235328306844694,1.0,1.0,1.0,0.0,1.0,39.35247440794137,72.46686301617632,53.59279213679996,24.238308824764708,54.42678289120086,0.13440951898143114,0.40766577552157,0.15477926295418892,0.05328514935355886,0.24986029318925107,0.257908744268203,0.25373542117385084,0.30760285552058464,0.04226913404084185,0.13848384499650276,0.3798222213776993,0.3603875933203671,0.2597901853019216,0.13440951898143114,0.40766577552157,0.15477926295418892,0.05328514935355886,0.24986029318925107,1.3929436566562596,1.0790001865875827,1.316179681628752,1.2627563080422073,0.5,0.3677133671883386,0.2848376457375087,0.34744898707415284,7536.959043373372,715.8278734154294,772.8004148186253,799.756841792837,101.56826257560475,381.4871955969252,829.4820951068892,756.6507682868854,560.676806540722,351.97938817648287,1067.5579477997906,405.3218156710221,139.538288734961,654.3113448571975",
	}

	gettersMap := map[int](func(header string) alloraMath.Dec){}
	for epochNumber, epoch := range simulatorEpochs {
		gettersMap[epochNumber] = GetSimulatedValuesGetterForEpoch(epoch, simulatorHeaders)
	}
	return gettersMap
}

func GetNetworkLossFromCsv(
	topicId uint64,
	inferers []string,
	forecasters []string,
	epochGet func(header string) alloraMath.Dec,
) (emissionstypes.ValueBundle, error) {
	if len(inferers) != 5 {
		return emissionstypes.ValueBundle{}, fmt.Errorf("expected 5 inferers, got %d", len(inferers))
	}
	if len(forecasters) != 3 {
		return emissionstypes.ValueBundle{}, fmt.Errorf("expected 3 forecasters, got %d", len(forecasters))
	}
	return emissionstypes.ValueBundle{
		TopicId:       topicId,
		CombinedValue: epochGet("network_loss_reputers"),
		InfererValues: []*emissionstypes.WorkerAttributedValue{
			{
				Worker: inferers[0],
				Value:  epochGet("inference_loss_0"),
			},
			{
				Worker: inferers[1],
				Value:  epochGet("inference_loss_1"),
			},
			{
				Worker: inferers[2],
				Value:  epochGet("inference_loss_2"),
			},
			{
				Worker: inferers[3],
				Value:  epochGet("inference_loss_3"),
			},
			{
				Worker: inferers[4],
				Value:  epochGet("inference_loss_4"),
			},
		},
		NaiveValue: epochGet("network_naive_loss_reputers"),
		ForecasterValues: []*emissionstypes.WorkerAttributedValue{
			{
				Worker: forecasters[0],
				Value:  epochGet("forecast_implied_inference_loss_0"),
			},
			{
				Worker: forecasters[1],
				Value:  epochGet("forecast_implied_inference_loss_1"),
			},
			{
				Worker: forecasters[2],
				Value:  epochGet("forecast_implied_inference_loss_2"),
			},
		},
		OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
			{
				Worker: inferers[0],
				Value:  epochGet("network_loss_reputers_oneout_0"),
			},
			{
				Worker: inferers[1],
				Value:  epochGet("network_loss_reputers_oneout_1"),
			},
			{
				Worker: inferers[2],
				Value:  epochGet("network_loss_reputers_oneout_2"),
			},
			{
				Worker: inferers[3],
				Value:  epochGet("network_loss_reputers_oneout_3"),
			},
			{
				Worker: inferers[4],
				Value:  epochGet("network_loss_reputers_oneout_4"),
			},
		},
		OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
			{
				Worker: forecasters[0],
				Value:  epochGet("network_loss_reputers_oneout_5"),
			},
			{
				Worker: forecasters[1],
				Value:  epochGet("network_loss_reputers_oneout_6"),
			},
			{
				Worker: forecasters[2],
				Value:  epochGet("network_loss_reputers_oneout_7"),
			},
		},
		OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
			{
				Worker: forecasters[0],
				Value:  epochGet("network_naive_loss_reputers_onein_0"),
			},
			{
				Worker: forecasters[1],
				Value:  epochGet("network_naive_loss_reputers_onein_1"),
			},
			{
				Worker: forecasters[2],
				Value:  epochGet("network_naive_loss_reputers_onein_2"),
			},
		},
	}, nil
}

func GetReputersDataFromCsv(
	topicId uint64,
	inferers []string,
	forecasters []string,
	reputers []string,
	epochGet func(header string) alloraMath.Dec,
) (emissionstypes.ReputerValueBundles, error) {
	if len(inferers) != 5 {
		return emissionstypes.ReputerValueBundles{}, fmt.Errorf("expected 5 inferers, got %d", len(inferers))
	}
	if len(forecasters) != 3 {
		return emissionstypes.ReputerValueBundles{}, fmt.Errorf("expected 3 forecasters, got %d", len(forecasters))
	}
	if len(reputers) != 5 {
		return emissionstypes.ReputerValueBundles{}, fmt.Errorf("expected 5 reputers, got %d", len(reputers))
	}
	return emissionstypes.ReputerValueBundles{
		ReputerValueBundles: []*emissionstypes.ReputerValueBundle{
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[0],
					CombinedValue: epochGet("reputer_0_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_0_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_0_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_0_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_0_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_0_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_0_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_0_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_0_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_0_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_0_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_0_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_0_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_0_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[1],
					CombinedValue: epochGet("reputer_1_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_1_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_1_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_1_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_1_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_1_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_1_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_1_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_1_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_1_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_1_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_1_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_1_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_1_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[2],
					CombinedValue: epochGet("reputer_2_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_2_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_2_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_2_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_2_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_2_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_2_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_2_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_2_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_2_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_2_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_2_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_2_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_2_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[3],
					CombinedValue: epochGet("reputer_3_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_3_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_3_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_3_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_3_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_3_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_3_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_3_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_3_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_3_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_3_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_3_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_3_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_3_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
			{
				ValueBundle: &emissionstypes.ValueBundle{
					TopicId:       topicId,
					Reputer:       reputers[4],
					CombinedValue: epochGet("reputer_4_loss_network_inference"),
					InfererValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_4_loss_inference_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_4_loss_inference_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_4_loss_inference_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_4_loss_inference_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_4_loss_inference_4"),
						},
					},
					NaiveValue: epochGet("reputer_4_loss_naive_network_inference"),
					ForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_4_loss_forecast_implied_inference_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_4_loss_forecast_implied_inference_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_4_loss_forecast_implied_inference_2"),
						},
					},
					OneOutInfererValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: inferers[0],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_0"),
						},
						{
							Worker: inferers[1],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_1"),
						},
						{
							Worker: inferers[2],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_2"),
						},
						{
							Worker: inferers[3],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_3"),
						},
						{
							Worker: inferers[4],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_4"),
						},
					},
					OneOutForecasterValues: []*emissionstypes.WithheldWorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_5"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_6"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_4_loss_network_inference_oneout_7"),
						},
					},
					OneInForecasterValues: []*emissionstypes.WorkerAttributedValue{
						{
							Worker: forecasters[0],
							Value:  epochGet("reputer_4_loss_naive_network_inference_onein_0"),
						},
						{
							Worker: forecasters[1],
							Value:  epochGet("reputer_4_loss_naive_network_inference_onein_1"),
						},
						{
							Worker: forecasters[2],
							Value:  epochGet("reputer_4_loss_naive_network_inference_onein_2"),
						},
					},
				},
			},
		},
	}, nil
}
